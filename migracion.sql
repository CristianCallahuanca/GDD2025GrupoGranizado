-- Borrado de constraints para luego poder borrar las tablas
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_LOCALIDAD_PROVINCIA')
ALTER TABLE GRANIZADO.LOCALIDAD DROP CONSTRAINT FK_LOCALIDAD_PROVINCIA;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_DIRECCION_LOCALIDAD')
ALTER TABLE GRANIZADO.DIRECCION DROP CONSTRAINT FK_DIRECCION_LOCALIDAD;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_SUCURSAL_DIRECCION')
ALTER TABLE GRANIZADO.SUCURSAL DROP CONSTRAINT FK_SUCURSAL_DIRECCION;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_PROVEEDOR_DIRECCION')
ALTER TABLE GRANIZADO.PROVEEDOR DROP CONSTRAINT FK_PROVEEDOR_DIRECCION;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_COMPRA_SUC')
ALTER TABLE GRANIZADO.COMPRA DROP CONSTRAINT FK_COMPRA_SUC;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_COMPRA_PROV')
ALTER TABLE GRANIZADO.COMPRA DROP CONSTRAINT FK_COMPRA_PROV;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_DETCOMPRA_COMPRA')
ALTER TABLE GRANIZADO.DETALLE_COMPRA DROP CONSTRAINT FK_DETCOMPRA_COMPRA;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_DETCOMPRA_MAT')
ALTER TABLE GRANIZADO.DETALLE_COMPRA DROP CONSTRAINT FK_DETCOMPRA_MAT;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_MATERIAL_TIPO')
ALTER TABLE GRANIZADO.MATERIAL DROP CONSTRAINT FK_MATERIAL_TIPO;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_SILLON_MODELO')
ALTER TABLE GRANIZADO.SILLON DROP CONSTRAINT FK_SILLON_MODELO;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_SILLON_MEDIDA')
ALTER TABLE GRANIZADO.SILLON DROP CONSTRAINT FK_SILLON_MEDIDA;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_MATSILLON_SILLON')
ALTER TABLE GRANIZADO.MATERIAL_SILLON DROP CONSTRAINT FK_MATSILLON_SILLON;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_MATSILLON_MATERIAL')
ALTER TABLE GRANIZADO.MATERIAL_SILLON DROP CONSTRAINT FK_MATSILLON_MATERIAL;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_SILLON_MATERIAL')
ALTER TABLE GRANIZADO.SILLON DROP CONSTRAINT FK_SILLON_MATERIAL;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_CLIENTE_DIRECCION')
ALTER TABLE GRANIZADO.CLIENTE DROP CONSTRAINT FK_CLIENTE_DIRECCION;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_PEDIDO_CLIENTE')
    ALTER TABLE GRANIZADO.PEDIDO DROP CONSTRAINT FK_PEDIDO_CLIENTE;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_PEDIDO_SUC')
    ALTER TABLE GRANIZADO.PEDIDO DROP CONSTRAINT FK_PEDIDO_SUC;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_PEDCAN_PED')
    ALTER TABLE GRANIZADO.PEDIDO_CANCELADO DROP CONSTRAINT FK_PEDCAN_PED;


IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_DETPEDIDO_PED')
    ALTER TABLE GRANIZADO.DETALLE_PEDIDO DROP CONSTRAINT FK_DETPEDIDO_PED;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_DETPEDIDO_SILLON')
    ALTER TABLE GRANIZADO.DETALLE_PEDIDO DROP CONSTRAINT FK_DETPEDIDO_SILLON;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_FACTURA_CLI')
    ALTER TABLE GRANIZADO.FACTURA DROP CONSTRAINT FK_FACTURA_CLI;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_FACTURA_SUC')
    ALTER TABLE GRANIZADO.FACTURA DROP CONSTRAINT FK_FACTURA_SUC;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_DETFACT_FACT')
    ALTER TABLE GRANIZADO.DETALLE_FACTURA DROP CONSTRAINT FK_DETFACT_FACT;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_DETFACT_PEDIDO')
    ALTER TABLE GRANIZADO.DETALLE_FACTURA DROP CONSTRAINT FK_DETFACT_PEDIDO;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_ENVIO_FACT')
    ALTER TABLE GRANIZADO.ENVIO DROP CONSTRAINT FK_ENVIO_FACT;

IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_PROVINCIA')
ALTER TABLE GRANIZADO.PROVINCIA DROP CONSTRAINT PK_PROVINCIA;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_LOCALIDAD')
ALTER TABLE GRANIZADO.LOCALIDAD DROP CONSTRAINT PK_LOCALIDAD;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_DIRECCION')
ALTER TABLE GRANIZADO.DIRECCION DROP CONSTRAINT PK_DIRECCION;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_SUCURSAL')
ALTER TABLE GRANIZADO.SUCURSAL DROP CONSTRAINT PK_SUCURSAL;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_PROVEEDOR')
ALTER TABLE GRANIZADO.PROVEEDOR DROP CONSTRAINT PK_PROVEEDOR;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_COMPRA')
ALTER TABLE GRANIZADO.COMPRA DROP CONSTRAINT PK_COMPRA;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_DETALLE_COMPRA')
ALTER TABLE GRANIZADO.DETALLE_COMPRA DROP CONSTRAINT PK_DETALLE_COMPRA;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_TIPO_MATERIAL')
ALTER TABLE GRANIZADO.TIPO_MATERIAL DROP CONSTRAINT PK_TIPO_MATERIAL;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_MATERIAL')
ALTER TABLE GRANIZADO.MATERIAL DROP CONSTRAINT PK_MATERIAL;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_MADERA')
ALTER TABLE GRANIZADO.MADERA DROP CONSTRAINT PK_MADERA;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_TELA')
ALTER TABLE GRANIZADO.TELA DROP CONSTRAINT PK_TELA;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_RELLENO')
ALTER TABLE GRANIZADO.RELLENO DROP CONSTRAINT PK_RELLENO;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_MEDIDA')
ALTER TABLE GRANIZADO.MEDIDA DROP CONSTRAINT PK_MEDIDA;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_MODELO')
ALTER TABLE GRANIZADO.MODELO DROP CONSTRAINT PK_MODELO;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_SILLON')
ALTER TABLE GRANIZADO.SILLON DROP CONSTRAINT PK_SILLON;
IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_CLIENTE')
ALTER TABLE GRANIZADO.CLIENTE DROP CONSTRAINT PK_CLIENTE;

IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_PEDIDO')
    ALTER TABLE GRANIZADO.PEDIDO DROP CONSTRAINT PK_PEDIDO;

IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_PEDIDO_CANCELADO')
    ALTER TABLE GRANIZADO.PEDIDO_CANCELADO DROP CONSTRAINT PK_PEDIDO_CANCELADO;

IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_DETALLE_PEDIDO')
    ALTER TABLE GRANIZADO.DETALLE_PEDIDO DROP CONSTRAINT PK_DETALLE_PEDIDO;

IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_FACTURA')
    ALTER TABLE GRANIZADO.FACTURA DROP CONSTRAINT PK_FACTURA;

IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_DETALLE_FACTURA')
    ALTER TABLE GRANIZADO.DETALLE_FACTURA DROP CONSTRAINT PK_DETALLE_FACTURA;

IF EXISTS (SELECT 1 FROM sys.key_constraints WHERE name = 'PK_ENVIO')
    ALTER TABLE GRANIZADO.ENVIO DROP CONSTRAINT PK_ENVIO;

-- Borrado de tablas si existen
IF OBJECT_ID('GRANIZADO.DETALLE_FACTURA','U') IS NOT NULL DROP TABLE GRANIZADO.DETALLE_FACTURA;
IF OBJECT_ID('GRANIZADO.FACTURA','U') IS NOT NULL DROP TABLE GRANIZADO.FACTURA;
IF OBJECT_ID('GRANIZADO.ENVIO','U') IS NOT NULL DROP TABLE GRANIZADO.ENVIO;
IF OBJECT_ID('GRANIZADO.DETALLE_PEDIDO','U') IS NOT NULL DROP TABLE GRANIZADO.DETALLE_PEDIDO;
IF OBJECT_ID('GRANIZADO.PEDIDO_CANCELADO','U') IS NOT NULL DROP TABLE GRANIZADO.PEDIDO_CANCELADO;
IF OBJECT_ID('GRANIZADO.PEDIDO','U') IS NOT NULL DROP TABLE GRANIZADO.PEDIDO;
IF OBJECT_ID('GRANIZADO.CLIENTE','U') IS NOT NULL DROP TABLE GRANIZADO.CLIENTE;
IF OBJECT_ID('GRANIZADO.SILLON','U') IS NOT NULL DROP TABLE GRANIZADO.SILLON;
IF OBJECT_ID('GRANIZADO.MATERIAL_SILLON','U') IS NOT NULL DROP TABLE GRANIZADO.MATERIAL_SILLON;
IF OBJECT_ID('GRANIZADO.MODELO','U') IS NOT NULL DROP TABLE GRANIZADO.MODELO;
IF OBJECT_ID('GRANIZADO.MEDIDA','U') IS NOT NULL DROP TABLE GRANIZADO.MEDIDA;
IF OBJECT_ID('GRANIZADO.TIPO_MATERIAL','U') IS NOT NULL DROP TABLE GRANIZADO.TIPO_MATERIAL;
IF OBJECT_ID('GRANIZADO.MATERIAL','U') IS NOT NULL DROP TABLE GRANIZADO.MATERIAL;
IF OBJECT_ID('GRANIZADO.MADERA','U') IS NOT NULL DROP TABLE GRANIZADO.MADERA;
IF OBJECT_ID('GRANIZADO.RELLENO','U') IS NOT NULL DROP TABLE GRANIZADO.RELLENO;
IF OBJECT_ID('GRANIZADO.TELA','U') IS NOT NULL DROP TABLE GRANIZADO.TELA;
IF OBJECT_ID('GRANIZADO.DETALLE_COMPRA','U') IS NOT NULL DROP TABLE GRANIZADO.DETALLE_COMPRA;
IF OBJECT_ID('GRANIZADO.COMPRA','U') IS NOT NULL DROP TABLE GRANIZADO.COMPRA;
IF OBJECT_ID('GRANIZADO.PROVEEDOR','U') IS NOT NULL DROP TABLE GRANIZADO.PROVEEDOR;
IF OBJECT_ID('GRANIZADO.SUCURSAL','U') IS NOT NULL DROP TABLE GRANIZADO.SUCURSAL;
IF OBJECT_ID('GRANIZADO.DIRECCION','U') IS NOT NULL DROP TABLE GRANIZADO.DIRECCION;
IF OBJECT_ID('GRANIZADO.LOCALIDAD','U') IS NOT NULL DROP TABLE GRANIZADO.LOCALIDAD;
IF OBJECT_ID('GRANIZADO.PROVINCIA','U') IS NOT NULL DROP TABLE GRANIZADO.PROVINCIA;
IF OBJECT_ID('GRANIZADO.SILLON_MATERIAL','U') IS NOT NULL DROP TABLE GRANIZADO.SILLON_MATERIAL;


-- Borrado de Stored Procedures
IF OBJECT_ID('GRANIZADO.MIGRAR_PROVINCIA', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_PROVINCIA;
IF OBJECT_ID('GRANIZADO.MIGRAR_LOCALIDAD', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_LOCALIDAD;
IF OBJECT_ID('GRANIZADO.MIGRAR_DIRECCION', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_DIRECCION;
IF OBJECT_ID('GRANIZADO.MIGRAR_SUCURSAL', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_SUCURSAL;
IF OBJECT_ID('GRANIZADO.MIGRAR_PROVEEDOR', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_PROVEEDOR;
IF OBJECT_ID('GRANIZADO.MIGRAR_CLIENTE', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_CLIENTE;
IF OBJECT_ID('GRANIZADO.MIGRAR_TIPO_MATERIAL', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_TIPO_MATERIAL;
IF OBJECT_ID('GRANIZADO.MIGRAR_MATERIAL', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_MATERIAL;
IF OBJECT_ID('GRANIZADO.MIGRAR_MADERA', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_MADERA;
IF OBJECT_ID('GRANIZADO.MIGRAR_TELA', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_TELA;
IF OBJECT_ID('GRANIZADO.MIGRAR_RELLENO', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_RELLENO;
IF OBJECT_ID('GRANIZADO.MIGRAR_MEDIDA', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_MEDIDA;
IF OBJECT_ID('GRANIZADO.MIGRAR_MODELO', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_MODELO;
IF OBJECT_ID('GRANIZADO.MIGRAR_SILLON', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_SILLON;
IF OBJECT_ID('GRANIZADO.MIGRAR_MATERIAL_SILLON', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_MATERIAL_SILLON;
IF OBJECT_ID('GRANIZADO.MIGRAR_PEDIDO', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_PEDIDO;
IF OBJECT_ID('GRANIZADO.MIGRAR_PEDIDO_CANCELADO', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_PEDIDO_CANCELADO;
IF OBJECT_ID('GRANIZADO.MIGRAR_DETALLE_PEDIDO', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_DETALLE_PEDIDO;
IF OBJECT_ID('GRANIZADO.MIGRAR_FACTURA', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_FACTURA;
IF OBJECT_ID('GRANIZADO.MIGRAR_DETALLE_FACTURA', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_DETALLE_FACTURA;
IF OBJECT_ID('GRANIZADO.MIGRAR_ENVIO', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_ENVIO;
IF OBJECT_ID('GRANIZADO.MIGRAR_COMPRA', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_COMPRA;
IF OBJECT_ID('GRANIZADO.MIGRAR_DETALLE_COMPRA', 'P') IS NOT NULL DROP PROCEDURE GRANIZADO.MIGRAR_DETALLE_COMPRA;


-- Borrado del esquema si existe
IF EXISTS (SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'GRANIZADO')
  DROP SCHEMA GRANIZADO;
GO

-- Crear esquema
CREATE SCHEMA GRANIZADO;
GO

-- Tabla PROVINCIA
CREATE TABLE GRANIZADO.PROVINCIA (
  provincia_id INT IDENTITY(1,1) NOT NULL,
  prov_nombre NVARCHAR(255) NOT NULL
);

-- Tabla LOCALIDAD
CREATE TABLE GRANIZADO.LOCALIDAD (
  localidad_id INT IDENTITY(1,1) NOT NULL,
  provincia_id INT NOT NULL,
  localidad_nombre NVARCHAR(255) NOT NULL
);

-- Tabla DIRECCION
CREATE TABLE GRANIZADO.DIRECCION (
  direccion_id INT IDENTITY(1,1) NOT NULL,
  localidad_id INT NOT NULL,
  direccion_calle NVARCHAR(255) NOT NULL,
  dir_num_calle NVARCHAR(255) NOT NULL
);

-- Tabla SUCURSAL
CREATE TABLE GRANIZADO.SUCURSAL (
  Sucursal_NroSucursal BIGINT NOT NULL,
  direccion_id INT NOT NULL,
  Sucursal_telefono NVARCHAR(255),
  Sucursal_mail NVARCHAR(255)
);




-- Tabla PROVEEDOR
CREATE TABLE GRANIZADO.PROVEEDOR (
  prov_id INT IDENTITY(1,1) NOT NULL,
  direccion_id INT NOT NULL,
  Proveedor_RazonSocial NVARCHAR(255) NOT NULL,
  Proveedor_Telefono NVARCHAR(255),
  Proveedor_Mail NVARCHAR(255)
);

-- Tabla COMPRA
CREATE TABLE GRANIZADO.COMPRA (
  compra_id DECIMAL(18,0) NOT NULL,
  Sucursal_NroSucursal BIGINT NOT NULL,
  prov_id INT NOT NULL,
  Compra_Fecha DATETIME2(6),
  Compra_Total DECIMAL(18,2)
);


-- Tabla DETALLE_COMPRA
CREATE TABLE GRANIZADO.DETALLE_COMPRA (
  id_det_compra INT IDENTITY(1,1) NOT NULL,
  compra_id DECIMAL(18,0) NOT NULL,
  mat_id INT NOT NULL,
  Detalle_Compra_Precio DECIMAL(18,2),
  Detalle_Compra_Cantidad DECIMAL(18,0),
  Detalle_Compra_SubTotal DECIMAL(18,2)
);

-- Tabla MATERIAL
CREATE TABLE GRANIZADO.MATERIAL (
  mat_id INT IDENTITY(1,1) NOT NULL,
  tipo_material_id INT NOT NULL,
  Material_Nombre NVARCHAR(255),
  Material_Descripcion NVARCHAR(255),
  Material_Precio DECIMAL(38,2)
);

-- Tabla TIPO_MATERIAL
CREATE TABLE GRANIZADO.TIPO_MATERIAL (
    tipo_material_id INT IDENTITY(1,1) NOT NULL,
    tipo_nombre NVARCHAR(255) NOT NULL
);


-- Tabla MADERA
CREATE TABLE GRANIZADO.MADERA (
  madera_id INT IDENTITY(1,1) NOT NULL,
  Madera_Color NVARCHAR(255),
  Madera_Dureza NVARCHAR(255)
);

-- Tabla TELA
CREATE TABLE GRANIZADO.TELA (
  tela_id INT IDENTITY(1,1) NOT NULL,
  Tela_Color NVARCHAR(255),
  Tela_Textura NVARCHAR(255)
);

-- Tabla RELLENO
CREATE TABLE GRANIZADO.RELLENO (
  relleno_id INT IDENTITY(1,1) NOT NULL,
  Relleno_Densidad DECIMAL(38,2)
);

-- Tabla MEDIDA
CREATE TABLE GRANIZADO.MEDIDA (
  med_id INT IDENTITY(1,1) NOT NULL,
  precio DECIMAL(18,2),
  Sillon_Medida_Alto DECIMAL(18,2),
  Sillon_Medida_Ancho DECIMAL(18,2),
  Sillon_Medida_Profundidad DECIMAL(18,2)
);

-- Tabla MODELO
CREATE TABLE GRANIZADO.MODELO (
  mod_id INT IDENTITY(1,1) NOT NULL,
  nombre_modelo NVARCHAR(255),
  precio_modelo DECIMAL(18,2)
);

-- Tabla SILLON
CREATE TABLE GRANIZADO.SILLON (
  Sillon_Codigo BIGINT NOT NULL,
  Sillon_Modelo_Codigo INT,
  med_id INT,
  Sillon_Modelo_Descripcion NVARCHAR(255)
);

-- Tabla MATERIAL_SILLON
CREATE TABLE GRANIZADO.MATERIAL_SILLON (
    Sillon_Codigo BIGINT NOT NULL,
    mat_id INT NOT NULL,
);


-- Tabla CLIENTE
CREATE TABLE GRANIZADO.CLIENTE (
  cli_id INT IDENTITY(1,1) NOT NULL,
  Cliente_nombre NVARCHAR(255),
  Cliente_Apellido NVARCHAR(255),
  Cliente_FechaNacimiento DATETIME2(6),
  direccion_id INT NOT NULL,
  Cliente_Telefono NVARCHAR(255),
  Cliente_Mail NVARCHAR(255)
);

-- Tabla PEDIDO
CREATE TABLE GRANIZADO.PEDIDO (
  Pedido_Numero DECIMAL(18,0) NOT NULL,
  Pedido_Fecha DATETIME2(6),
  Sucursal_NroSucursal BIGINT NOT NULL,
  cli_id INT,
  Pedido_Total DECIMAL(18,2),
  Pedido_Estado NVARCHAR(255),
  Pedido_Cancelacion_Fecha DATETIME2(6),
  Pedido_Cancelacion_Motivo VARCHAR(255)
);


-- Tabla PEDIDO_CANCELADO
CREATE TABLE GRANIZADO.PEDIDO_CANCELADO (
  Pedido_Numero DECIMAL(18,0) NOT NULL,
  Sucursal_NroSucursal BIGINT NOT NULL,
  Pedido_Cancelacion_Fecha DATETIME2(6),
  Pedido_Cancelacion_Motivo VARCHAR(255)
);

-- Tabla DETALLE_PEDIDO
CREATE TABLE GRANIZADO.DETALLE_PEDIDO (
  Pedido_Numero DECIMAL(18,0) NOT NULL,
  Sucursal_NroSucursal BIGINT NOT NULL,
  Sillon_Codigo BIGINT NOT NULL,
  Detalle_Pedido_Cantidad BIGINT,
  Detalle_Pedido_Precio DECIMAL(18,2),
  Detalle_Pedido_SubTotal DECIMAL(18,2)
);

-- Tabla FACTURA
CREATE TABLE GRANIZADO.FACTURA (
  Factura_Numero BIGINT NOT NULL,
  Sucursal_NroSucursal BIGINT NOT NULL, 
  cli_id INT NOT NULL,                     
  Factura_Fecha DATETIME2(6),
  Factura_Total DECIMAL(18,2)
);


-- Tabla DETALLE_FACTURA
CREATE TABLE GRANIZADO.DETALLE_FACTURA (
  Factura_Numero BIGINT NOT NULL,
  Sucursal_NroSucursal BIGINT NOT NULL,
  Pedido_Numero DECIMAL(18,0) NOT NULL,
  Sillon_Codigo BIGINT NOT NULL,
  Detalle_Factura_Precio DECIMAL(18,2),
  Detalle_Factura_Cantidad DECIMAL(18,0),
  Detalle_Factura_SubTotal DECIMAL(18,2)
);

-- Tabla ENVIO
CREATE TABLE GRANIZADO.ENVIO (
  Envio_Numero DECIMAL(18,0) NOT NULL,
  Factura_Numero BIGINT NOT NULL,
  Sucursal_NroSucursal BIGINT NOT NULL,
  Envio_Fecha_Programada DATETIME2(6),
  Envio_Fecha DATETIME2(6),
  Envio_ImporteTraslado DECIMAL(18,2),
  Envio_ImporteSubida DECIMAL(18,2),
  Envio_Total DECIMAL(18,2)
);
GO


-- PRIMARY KEYS
ALTER TABLE GRANIZADO.PROVINCIA
  ADD CONSTRAINT PK_PROVINCIA PRIMARY KEY (provincia_id);

ALTER TABLE GRANIZADO.LOCALIDAD
  ADD CONSTRAINT PK_LOCALIDAD PRIMARY KEY (localidad_id);

ALTER TABLE GRANIZADO.DIRECCION
  ADD CONSTRAINT PK_DIRECCION PRIMARY KEY (direccion_id);

ALTER TABLE GRANIZADO.SUCURSAL
  ADD CONSTRAINT PK_SUCURSAL PRIMARY KEY (Sucursal_NroSucursal);

ALTER TABLE GRANIZADO.PROVEEDOR
  ADD CONSTRAINT PK_PROVEEDOR PRIMARY KEY (prov_id);

ALTER TABLE GRANIZADO.COMPRA
  ADD CONSTRAINT PK_COMPRA PRIMARY KEY (compra_id);

ALTER TABLE GRANIZADO.DETALLE_COMPRA
  ADD CONSTRAINT PK_DETALLE_COMPRA PRIMARY KEY (id_det_compra);

ALTER TABLE GRANIZADO.TIPO_MATERIAL
  ADD CONSTRAINT PK_TIPO_MATERIAL PRIMARY KEY (tipo_material_id);

ALTER TABLE GRANIZADO.MATERIAL
  ADD CONSTRAINT PK_MATERIAL PRIMARY KEY (mat_id);

ALTER TABLE GRANIZADO.MADERA
  ADD CONSTRAINT PK_MADERA PRIMARY KEY (madera_id);

ALTER TABLE GRANIZADO.TELA
  ADD CONSTRAINT PK_TELA PRIMARY KEY (tela_id);

ALTER TABLE GRANIZADO.RELLENO
  ADD CONSTRAINT PK_RELLENO PRIMARY KEY (relleno_id);

ALTER TABLE GRANIZADO.MEDIDA
  ADD CONSTRAINT PK_MEDIDA PRIMARY KEY (med_id);

ALTER TABLE GRANIZADO.MODELO
  ADD CONSTRAINT PK_MODELO PRIMARY KEY (mod_id);

ALTER TABLE GRANIZADO.SILLON
  ADD CONSTRAINT PK_SILLON PRIMARY KEY (Sillon_Codigo);

ALTER TABLE GRANIZADO.MATERIAL_SILLON
    ADD CONSTRAINT PK_MATERIAL_SILLON PRIMARY KEY (Sillon_Codigo, mat_id);

ALTER TABLE GRANIZADO.CLIENTE
  ADD CONSTRAINT PK_CLIENTE PRIMARY KEY (cli_id);

ALTER TABLE GRANIZADO.PEDIDO
  ADD CONSTRAINT PK_PEDIDO PRIMARY KEY (Pedido_Numero);

ALTER TABLE GRANIZADO.PEDIDO_CANCELADO
  ADD CONSTRAINT PK_PEDIDO_CANCELADO PRIMARY KEY (Pedido_Numero, Sucursal_NroSucursal);

ALTER TABLE GRANIZADO.DETALLE_PEDIDO
  ADD CONSTRAINT PK_DETALLE_PEDIDO PRIMARY KEY (Pedido_Numero, Sucursal_NroSucursal, Sillon_Codigo);

ALTER TABLE GRANIZADO.FACTURA
  ADD CONSTRAINT PK_FACTURA PRIMARY KEY (Factura_Numero);

ALTER TABLE GRANIZADO.DETALLE_FACTURA
  ADD CONSTRAINT PK_DETALLE_FACTURA PRIMARY KEY (
    Factura_Numero, 
    Sucursal_NroSucursal, 
    Pedido_Numero, 
    Sillon_Codigo
  );

ALTER TABLE GRANIZADO.ENVIO
  ADD CONSTRAINT PK_ENVIO PRIMARY KEY (Envio_Numero, Factura_Numero, Sucursal_NroSucursal);


-- LOCALIDAD → PROVINCIA
ALTER TABLE GRANIZADO.LOCALIDAD
  ADD CONSTRAINT FK_LOCALIDAD_PROVINCIA FOREIGN KEY (provincia_id)
  REFERENCES GRANIZADO.PROVINCIA(provincia_id);

-- DIRECCION → LOCALIDAD
ALTER TABLE GRANIZADO.DIRECCION
  ADD CONSTRAINT FK_DIRECCION_LOCALIDAD FOREIGN KEY (localidad_id)
  REFERENCES GRANIZADO.LOCALIDAD(localidad_id);

-- SUCURSAL → DIRECCION
ALTER TABLE GRANIZADO.SUCURSAL
  ADD CONSTRAINT FK_SUCURSAL_DIRECCION FOREIGN KEY (direccion_id)
  REFERENCES GRANIZADO.DIRECCION(direccion_id);

-- PROVEEDOR → DIRECCION
ALTER TABLE GRANIZADO.PROVEEDOR
  ADD CONSTRAINT FK_PROVEEDOR_DIRECCION FOREIGN KEY (direccion_id)
  REFERENCES GRANIZADO.DIRECCION(direccion_id);

-- COMPRA → SUCURSAL, PROVEEDOR
ALTER TABLE GRANIZADO.COMPRA
  ADD CONSTRAINT FK_COMPRA_SUC FOREIGN KEY (Sucursal_NroSucursal) REFERENCES GRANIZADO.SUCURSAL(Sucursal_NroSucursal),
      CONSTRAINT FK_COMPRA_PROV FOREIGN KEY (prov_id) REFERENCES GRANIZADO.PROVEEDOR(prov_id);

-- DETALLE_COMPRA → COMPRA, MATERIAL
ALTER TABLE GRANIZADO.DETALLE_COMPRA
  ADD CONSTRAINT FK_DETCOMPRA_COMPRA FOREIGN KEY (compra_id) REFERENCES GRANIZADO.COMPRA(compra_id),
      CONSTRAINT FK_DETCOMPRA_MAT FOREIGN KEY (mat_id) REFERENCES GRANIZADO.MATERIAL(mat_id);
    
-- TIPO_MATERIAL → MATERIAL
ALTER TABLE GRANIZADO.MATERIAL
  ADD CONSTRAINT FK_MATERIAL_TIPO
  FOREIGN KEY (tipo_material_id) REFERENCES GRANIZADO.TIPO_MATERIAL(tipo_material_id);

-- SILLON → MODELO, MEDIDA, MATERIAL
ALTER TABLE GRANIZADO.SILLON
  ADD CONSTRAINT FK_SILLON_MODELO FOREIGN KEY (Sillon_Modelo_Codigo) REFERENCES GRANIZADO.MODELO(mod_id),
      CONSTRAINT FK_SILLON_MEDIDA FOREIGN KEY (med_id) REFERENCES GRANIZADO.MEDIDA(med_id);

ALTER TABLE GRANIZADO.MATERIAL_SILLON
  ADD CONSTRAINT FK_MATSILLON_SILLON FOREIGN KEY (Sillon_Codigo) REFERENCES GRANIZADO.SILLON(Sillon_Codigo),
      CONSTRAINT FK_MATSILLON_MATERIAL FOREIGN KEY (mat_id) REFERENCES GRANIZADO.MATERIAL(mat_id);

-- CLIENTE → DIRECCION
ALTER TABLE GRANIZADO.CLIENTE
  ADD CONSTRAINT FK_CLIENTE_DIRECCION FOREIGN KEY (direccion_id)
  REFERENCES GRANIZADO.DIRECCION(direccion_id);

-- PEDIDO → CLIENTE, SUCURSAL
ALTER TABLE GRANIZADO.PEDIDO
  ADD CONSTRAINT FK_PEDIDO_CLIENTE FOREIGN KEY (cli_id) REFERENCES GRANIZADO.CLIENTE(cli_id),
      CONSTRAINT FK_PEDIDO_SUC FOREIGN KEY (Sucursal_NroSucursal) REFERENCES GRANIZADO.SUCURSAL(Sucursal_NroSucursal);

-- PEDIDO_CANCELADO → PEDIDO
ALTER TABLE GRANIZADO.PEDIDO_CANCELADO
  ADD CONSTRAINT FK_PEDCAN_PED FOREIGN KEY (Pedido_Numero)
  REFERENCES GRANIZADO.PEDIDO(Pedido_Numero);

-- DETALLE_PEDIDO → PEDIDO, SILLON
ALTER TABLE GRANIZADO.DETALLE_PEDIDO
  ADD CONSTRAINT FK_DETPEDIDO_PED FOREIGN KEY (Pedido_Numero) REFERENCES GRANIZADO.PEDIDO(Pedido_Numero),
      CONSTRAINT FK_DETPEDIDO_SILLON FOREIGN KEY (Sillon_Codigo) REFERENCES GRANIZADO.SILLON(Sillon_Codigo);

-- FACTURA → CLIENTE, SUCURSAL
ALTER TABLE GRANIZADO.FACTURA
  ADD CONSTRAINT FK_FACTURA_CLI FOREIGN KEY (cli_id) REFERENCES GRANIZADO.CLIENTE(cli_id),
      CONSTRAINT FK_FACTURA_SUC FOREIGN KEY (Sucursal_NroSucursal) REFERENCES GRANIZADO.SUCURSAL(Sucursal_NroSucursal);

-- DETALLE_FACTURA → FACTURA, DETALLE_PEDIDO
ALTER TABLE GRANIZADO.DETALLE_FACTURA
  ADD CONSTRAINT FK_DETFACT_FACT FOREIGN KEY (Factura_Numero) REFERENCES GRANIZADO.FACTURA(Factura_Numero),
      CONSTRAINT FK_DETFACT_PEDIDO FOREIGN KEY (Pedido_Numero, Sucursal_NroSucursal, Sillon_Codigo) REFERENCES GRANIZADO.DETALLE_PEDIDO(Pedido_Numero, Sucursal_NroSucursal, Sillon_Codigo);

-- ENVIO → FACTURA
ALTER TABLE GRANIZADO.ENVIO
  ADD CONSTRAINT FK_ENVIO_FACT FOREIGN KEY (Factura_Numero)
  REFERENCES GRANIZADO.FACTURA(Factura_Numero);
GO



-- Stored Procedure: MIGRAR_PROVINCIA
CREATE PROCEDURE GRANIZADO.MIGRAR_PROVINCIA
AS
BEGIN
    INSERT INTO GRANIZADO.PROVINCIA(prov_nombre)
    SELECT DISTINCT Provincia
    FROM (
        SELECT Sucursal_Provincia AS Provincia FROM GD1C2025.gd_esquema.Maestra WHERE Sucursal_Provincia IS NOT NULL
        UNION
        SELECT Cliente_Provincia FROM GD1C2025.gd_esquema.Maestra WHERE Cliente_Provincia IS NOT NULL
        UNION
        SELECT Proveedor_Provincia FROM GD1C2025.gd_esquema.Maestra WHERE Proveedor_Provincia IS NOT NULL
    ) AS Provincias
END
GO


-- Stored Procedure: MIGRAR_LOCALIDAD
CREATE PROCEDURE GRANIZADO.MIGRAR_LOCALIDAD
AS
BEGIN
    INSERT INTO GRANIZADO.LOCALIDAD(provincia_id, localidad_nombre)
    SELECT DISTINCT p.provincia_id, l.localidad
    FROM (
        SELECT Cliente_Provincia AS Provincia, Cliente_Localidad AS Localidad
        FROM GD1C2025.gd_esquema.Maestra
        WHERE Cliente_Provincia IS NOT NULL AND Cliente_Localidad IS NOT NULL

        UNION

        SELECT Sucursal_Provincia, Sucursal_Localidad
        FROM GD1C2025.gd_esquema.Maestra
        WHERE Sucursal_Provincia IS NOT NULL AND Sucursal_Localidad IS NOT NULL

        UNION

        SELECT Proveedor_Provincia, Proveedor_Localidad
        FROM GD1C2025.gd_esquema.Maestra
        WHERE Proveedor_Provincia IS NOT NULL AND Proveedor_Localidad IS NOT NULL
    ) l
    JOIN GRANIZADO.PROVINCIA p ON p.prov_nombre = l.Provincia
END
GO



-- Stored Procedure: MIGRAR_DIRECCION
CREATE PROCEDURE GRANIZADO.MIGRAR_DIRECCION
AS
BEGIN
    INSERT INTO GRANIZADO.DIRECCION(localidad_id, direccion_calle, dir_num_calle)
    SELECT DISTINCT
        l.localidad_id,
        LEFT(direccion_txt, CHARINDEX(' N°', direccion_txt) - 1) AS direccion_calle,
        RIGHT(direccion_txt, LEN(direccion_txt) - CHARINDEX('N°', direccion_txt) - 1) AS dir_num_calle
    FROM (
        SELECT Cliente_Direccion AS direccion_txt, Cliente_Provincia AS prov, Cliente_Localidad AS loc
        FROM GD1C2025.gd_esquema.Maestra
        WHERE Cliente_Direccion IS NOT NULL
        UNION
        SELECT Sucursal_Direccion, Sucursal_Provincia, Sucursal_Localidad
        FROM GD1C2025.gd_esquema.Maestra
        WHERE Sucursal_Direccion IS NOT NULL
        UNION
        SELECT Proveedor_Direccion, Proveedor_Provincia, Proveedor_Localidad
        FROM GD1C2025.gd_esquema.Maestra
        WHERE Proveedor_Direccion IS NOT NULL
    ) AS direcciones
    INNER JOIN GRANIZADO.PROVINCIA p ON p.prov_nombre = direcciones.prov
    INNER JOIN GRANIZADO.LOCALIDAD l ON l.localidad_nombre = direcciones.loc AND l.provincia_id = p.provincia_id
END
GO


-- Stored Procedure: MIGRAR_SUCURSAL
CREATE PROCEDURE GRANIZADO.MIGRAR_SUCURSAL
AS
BEGIN
    INSERT INTO GRANIZADO.SUCURSAL(direccion_id, Sucursal_NroSucursal, Sucursal_telefono, Sucursal_mail)
    SELECT DISTINCT d.direccion_id, m.Sucursal_NroSucursal, m.Sucursal_telefono, m.Sucursal_mail
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.PROVINCIA p ON p.prov_nombre = m.Sucursal_Provincia
    JOIN GRANIZADO.LOCALIDAD l ON l.localidad_nombre = m.Sucursal_Localidad AND l.provincia_id = p.provincia_id
    JOIN GRANIZADO.DIRECCION d ON 
        d.direccion_calle = LEFT(m.Sucursal_Direccion, CHARINDEX(' N°', m.Sucursal_Direccion) - 1)
        AND d.dir_num_calle = RIGHT(m.Sucursal_Direccion, LEN(m.Sucursal_Direccion) - CHARINDEX('N°', m.Sucursal_Direccion) - 1)
        AND d.localidad_id = l.localidad_id
    WHERE m.Sucursal_NroSucursal IS NOT NULL
END
GO


-- Stored Procedure: MIGRAR_PROVEEDOR
CREATE PROCEDURE GRANIZADO.MIGRAR_PROVEEDOR
AS
BEGIN
    INSERT INTO GRANIZADO.PROVEEDOR(direccion_id, Proveedor_RazonSocial, Proveedor_Telefono, Proveedor_Mail)
    SELECT DISTINCT d.direccion_id, m.Proveedor_RazonSocial, m.Proveedor_Telefono, m.Proveedor_Mail
    FROM GD1C2025.gd_esquema.Maestra m
    INNER JOIN GRANIZADO.PROVINCIA p 
        ON p.prov_nombre = m.Proveedor_Provincia
    INNER JOIN GRANIZADO.LOCALIDAD l 
        ON l.localidad_nombre = m.Proveedor_Localidad AND l.provincia_id = p.provincia_id
    INNER JOIN GRANIZADO.DIRECCION d 
        ON d.direccion_calle = LEFT(m.Proveedor_Direccion, CHARINDEX(' N°', m.Proveedor_Direccion) - 1)
        AND d.dir_num_calle = RIGHT(m.Proveedor_Direccion, LEN(m.Proveedor_Direccion) - CHARINDEX('N° ', m.Proveedor_Direccion) - 1)
        AND d.localidad_id = l.localidad_id
    WHERE m.Proveedor_RazonSocial IS NOT NULL
END
GO


-- Stored Procedure: MIGRAR_CLIENTE
CREATE PROCEDURE GRANIZADO.MIGRAR_CLIENTE
AS
BEGIN
    INSERT INTO GRANIZADO.CLIENTE(Cliente_nombre, Cliente_Apellido, Cliente_FechaNacimiento, direccion_id, Cliente_Telefono, Cliente_Mail)
    SELECT DISTINCT m.Cliente_Nombre, m.Cliente_Apellido, m.Cliente_FechaNacimiento, d.direccion_id, m.Cliente_Telefono, m.Cliente_Mail
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.PROVINCIA p ON p.prov_nombre = m.Cliente_Provincia
    JOIN GRANIZADO.LOCALIDAD l ON l.localidad_nombre = m.Cliente_Localidad AND l.provincia_id = p.provincia_id
    JOIN GRANIZADO.DIRECCION d ON 
        d.direccion_calle = LEFT(m.Cliente_Direccion, CHARINDEX(' N°', m.Cliente_Direccion) - 1)
        AND d.dir_num_calle = RIGHT(m.Cliente_Direccion, LEN(m.Cliente_Direccion) - CHARINDEX('N°', m.Cliente_Direccion) - 1)
        AND d.localidad_id = l.localidad_id
    WHERE m.Cliente_Dni IS NOT NULL
END
GO

-- Stored Procedure: MIGRAR_TIPO_MATERIAL
CREATE PROCEDURE GRANIZADO.MIGRAR_TIPO_MATERIAL
AS
BEGIN
    INSERT INTO GRANIZADO.TIPO_MATERIAL(tipo_nombre)
    SELECT DISTINCT Material_Tipo
    FROM GD1C2025.gd_esquema.Maestra
    WHERE Material_Tipo IS NOT NULL
END
GO

-- Stored Procedure: MIGRAR_MATERIAL
CREATE PROCEDURE GRANIZADO.MIGRAR_MATERIAL
AS
BEGIN
    INSERT INTO GRANIZADO.MATERIAL (tipo_material_id, Material_Nombre, Material_Descripcion, Material_Precio)
    SELECT DISTINCT
        tm.tipo_material_id,
        m.Material_Nombre,
        m.Material_Descripcion,
        m.Material_Precio
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.TIPO_MATERIAL tm ON m.Material_Tipo = tm.tipo_nombre
    WHERE m.Material_Nombre IS NOT NULL
END
GO

-- Stored Procedure: MIGRAR_MADERA
CREATE PROCEDURE GRANIZADO.MIGRAR_MADERA
AS
BEGIN
    INSERT INTO GRANIZADO.MADERA(Madera_Color, Madera_Dureza)
    SELECT DISTINCT Madera_Color, Madera_Dureza
    FROM GD1C2025.gd_esquema.Maestra
    WHERE Madera_Color IS NOT NULL
END
GO

-- Stored Procedure: MIGRAR_TELA
CREATE PROCEDURE GRANIZADO.MIGRAR_TELA
AS
BEGIN
    INSERT INTO GRANIZADO.TELA(Tela_Color, Tela_Textura)
    SELECT DISTINCT Tela_Color, Tela_Textura
    FROM GD1C2025.gd_esquema.Maestra
    WHERE Tela_Color IS NOT NULL
END
GO

-- Stored Procedure: MIGRAR_RELLENO
CREATE PROCEDURE GRANIZADO.MIGRAR_RELLENO
AS
BEGIN
    INSERT INTO GRANIZADO.RELLENO(Relleno_Densidad)
    SELECT DISTINCT Relleno_Densidad
    FROM GD1C2025.gd_esquema.Maestra
    WHERE Relleno_Densidad IS NOT NULL
END
GO

-- Stored Procedure: MIGRAR_MEDIDA
CREATE PROCEDURE GRANIZADO.MIGRAR_MEDIDA
AS
BEGIN
    INSERT INTO GRANIZADO.MEDIDA(precio, Sillon_Medida_Alto, Sillon_Medida_Ancho, Sillon_Medida_Profundidad)
    SELECT DISTINCT Sillon_Medida_Precio, Sillon_Medida_Alto, Sillon_Medida_Ancho, Sillon_Medida_Profundidad
    FROM GD1C2025.gd_esquema.Maestra
    WHERE Sillon_Medida_Alto IS NOT NULL
END
GO

-- Stored Procedure: MIGRAR_MODELO
CREATE PROCEDURE GRANIZADO.MIGRAR_MODELO
AS
BEGIN
    INSERT INTO GRANIZADO.MODELO(nombre_modelo, precio_modelo)
    SELECT DISTINCT Sillon_Modelo, Sillon_Modelo_Precio
    FROM GD1C2025.gd_esquema.Maestra
    WHERE Sillon_Modelo IS NOT NULL
END
GO


-- Stored Procedure: MIGRAR_SILLON
CREATE PROCEDURE GRANIZADO.MIGRAR_SILLON
AS
BEGIN
    INSERT INTO GRANIZADO.SILLON(Sillon_Codigo, Sillon_Modelo_Codigo, med_id, Sillon_Modelo_Descripcion)
    SELECT DISTINCT 
        m.Sillon_Codigo,
        mo.mod_id, 
        me.med_id, 
        m.Sillon_Modelo_Descripcion
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.MODELO mo 
        ON mo.nombre_modelo = m.Sillon_Modelo
    JOIN GRANIZADO.MEDIDA me 
        ON me.Sillon_Medida_Alto = m.Sillon_Medida_Alto 
        AND me.Sillon_Medida_Ancho = m.Sillon_Medida_Ancho 
        AND me.Sillon_Medida_Profundidad = m.Sillon_Medida_Profundidad
    WHERE m.Sillon_Codigo IS NOT NULL;
END
GO


-- Stored Procedure: MIGRAR_MATERIAL_SILLON
CREATE PROCEDURE GRANIZADO.MIGRAR_MATERIAL_SILLON
AS
BEGIN
    INSERT INTO GRANIZADO.MATERIAL_SILLON (Sillon_Codigo, mat_id)
    SELECT DISTINCT
        m.Sillon_Codigo,
        ma.mat_id
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.TIPO_MATERIAL tm 
        ON m.Material_Tipo = tm.tipo_nombre
    JOIN GRANIZADO.MATERIAL ma 
        ON ma.Material_Nombre = m.Material_Nombre 
        AND ma.tipo_material_id = tm.tipo_material_id
    WHERE m.Sillon_Codigo IS NOT NULL;
END
GO

CREATE PROCEDURE GRANIZADO.MIGRAR_PEDIDO
AS
BEGIN
    INSERT INTO GRANIZADO.PEDIDO (
        Pedido_Numero,
        Pedido_Fecha,
        Sucursal_NroSucursal,
        cli_id,
        Pedido_Total,
        Pedido_Estado,
        Pedido_Cancelacion_Fecha,
        Pedido_Cancelacion_Motivo
    )
    SELECT
        m.Pedido_Numero,
        MAX(m.Pedido_Fecha),
        MAX(s.Sucursal_NroSucursal),
        MAX(c.cli_id),
        MAX(m.Pedido_Total),
        MAX(m.Pedido_Estado),
        MAX(m.Pedido_Cancelacion_Fecha),
        MAX(m.Pedido_Cancelacion_Motivo)
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.SUCURSAL s 
        ON s.Sucursal_NroSucursal = m.Sucursal_NroSucursal
    JOIN GRANIZADO.CLIENTE c 
        ON c.Cliente_Mail = m.Cliente_Mail 
       AND c.Cliente_Nombre = m.Cliente_Nombre 
       AND c.Cliente_Apellido = m.Cliente_Apellido
    WHERE m.Pedido_Numero IS NOT NULL
      AND m.Sucursal_NroSucursal IS NOT NULL
    GROUP BY m.Pedido_Numero
END
GO




-- Stored Procedure: MIGRAR_PEDIDO_CANCELADO
CREATE PROCEDURE GRANIZADO.MIGRAR_PEDIDO_CANCELADO
AS
BEGIN
    INSERT INTO GRANIZADO.PEDIDO_CANCELADO(
      Pedido_Numero, 
      Sucursal_NroSucursal, 
      Pedido_Cancelacion_Fecha, 
      Pedido_Cancelacion_Motivo
    )
    SELECT DISTINCT 
        m.Pedido_Numero,
        m.Sucursal_NroSucursal,
        m.Pedido_Cancelacion_Fecha,
        m.Pedido_Cancelacion_Motivo
    FROM GD1C2025.gd_esquema.Maestra m
    WHERE m.Pedido_Cancelacion_Fecha IS NOT NULL
      AND m.Pedido_Numero IS NOT NULL
      AND m.Sucursal_NroSucursal IS NOT NULL
END
GO



-- Stored Procedure: MIGRAR_DETALLE_PEDIDO
CREATE PROCEDURE GRANIZADO.MIGRAR_DETALLE_PEDIDO
AS
BEGIN
    INSERT INTO GRANIZADO.DETALLE_PEDIDO(
      Pedido_Numero, 
      Sucursal_NroSucursal, 
      Sillon_Codigo, 
      Detalle_Pedido_Cantidad, 
      Detalle_Pedido_Precio, 
      Detalle_Pedido_SubTotal
    )
    SELECT DISTINCT 
        m.Pedido_Numero,
        m.Sucursal_NroSucursal,
        s.Sillon_Codigo,
        m.Detalle_Pedido_Cantidad,
        m.Detalle_Pedido_Precio,
        m.Detalle_Pedido_SubTotal
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.SILLON s ON s.Sillon_Codigo = m.Sillon_Codigo
    WHERE m.Sillon_Codigo IS NOT NULL
      AND m.Pedido_Numero IS NOT NULL
      AND m.Sucursal_NroSucursal IS NOT NULL
END
GO

-- Stored Procedure: MIGRAR_FACTURA
CREATE PROCEDURE GRANIZADO.MIGRAR_FACTURA
AS
BEGIN
    INSERT INTO GRANIZADO.FACTURA (
        Factura_Numero,
        Sucursal_NroSucursal,
        cli_id,
        Factura_Fecha,
        Factura_Total
    )
    SELECT
        m.Factura_Numero,
        MAX(s.Sucursal_NroSucursal),
        MAX(c.cli_id),
        MAX(m.Factura_Fecha),
        MAX(m.Factura_Total)
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.CLIENTE c 
        ON c.Cliente_Mail = m.Cliente_Mail 
       AND c.Cliente_Nombre = m.Cliente_Nombre 
       AND c.Cliente_Apellido = m.Cliente_Apellido
    JOIN GRANIZADO.SUCURSAL s 
        ON s.Sucursal_NroSucursal = m.Sucursal_NroSucursal
    WHERE m.Factura_Numero IS NOT NULL
    GROUP BY m.Factura_Numero
END
GO


CREATE PROCEDURE GRANIZADO.MIGRAR_DETALLE_FACTURA
AS
BEGIN
    INSERT INTO GRANIZADO.DETALLE_FACTURA (
      Factura_Numero,
      Sucursal_NroSucursal,
      Pedido_Numero,
      Sillon_Codigo,
      Detalle_Factura_Precio,
      Detalle_Factura_Cantidad,
      Detalle_Factura_SubTotal
    )
    SELECT 
      f.Factura_Numero,
      dp.Sucursal_NroSucursal,
      dp.Pedido_Numero,
      dp.Sillon_Codigo,
      MAX(m.Detalle_Factura_Precio),
      MAX(m.Detalle_Factura_Cantidad),
      MAX(m.Detalle_Factura_SubTotal)
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.FACTURA f
      ON f.Factura_Numero = m.Factura_Numero
    JOIN GRANIZADO.DETALLE_PEDIDO dp
      ON dp.Pedido_Numero = m.Pedido_Numero
    GROUP BY 
      f.Factura_Numero,
      dp.Sucursal_NroSucursal,
      dp.Pedido_Numero,
      dp.Sillon_Codigo
END
GO




CREATE PROCEDURE GRANIZADO.MIGRAR_ENVIO
AS
BEGIN
    INSERT INTO GRANIZADO.ENVIO(
      Envio_Numero,
      Factura_Numero,
      Sucursal_NroSucursal,
      Envio_Fecha_Programada,
      Envio_Fecha,
      Envio_ImporteTraslado,
      Envio_ImporteSubida,
      Envio_Total
    )
    SELECT DISTINCT
        m.Envio_Numero,
        m.Factura_Numero,
        m.Sucursal_NroSucursal,
        m.Envio_Fecha_Programada,
        m.Envio_Fecha,
        m.Envio_ImporteTraslado,
        m.Envio_ImporteSubida,
        m.Envio_Total
    FROM GD1C2025.gd_esquema.Maestra m
    WHERE m.Envio_Numero IS NOT NULL
      AND m.Factura_Numero IS NOT NULL
      AND m.Sucursal_NroSucursal IS NOT NULL
END
GO


CREATE PROCEDURE GRANIZADO.MIGRAR_COMPRA
AS
BEGIN
    INSERT INTO GRANIZADO.COMPRA(compra_id, Sucursal_NroSucursal, prov_id, Compra_Fecha, Compra_Total)
    SELECT DISTINCT Compra_Numero, s.Sucursal_NroSucursal, p.prov_id, Compra_Fecha, Compra_Total
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.SUCURSAL s ON s.Sucursal_NroSucursal = m.Sucursal_NroSucursal
    JOIN GRANIZADO.PROVEEDOR p ON p.Proveedor_RazonSocial = m.Proveedor_RazonSocial
    WHERE Compra_Numero IS NOT NULL
END
GO

-- Stored Procedure: MIGRAR_DETALLE_COMPRA
CREATE PROCEDURE GRANIZADO.MIGRAR_DETALLE_COMPRA
AS
BEGIN
    INSERT INTO GRANIZADO.DETALLE_COMPRA(compra_id, mat_id, Detalle_Compra_Precio, Detalle_Compra_Cantidad, Detalle_Compra_SubTotal)
    SELECT DISTINCT 
        m.Compra_Numero, 
        ma.mat_id, 
        m.Detalle_Compra_Precio, 
        m.Detalle_Compra_Cantidad, 
        m.Detalle_Compra_SubTotal
    FROM GD1C2025.gd_esquema.Maestra m
    JOIN GRANIZADO.TIPO_MATERIAL tm ON m.Material_Tipo = tm.tipo_nombre
    JOIN GRANIZADO.MATERIAL ma ON ma.Material_Nombre = m.Material_Nombre 
                               AND ma.tipo_material_id = tm.tipo_material_id
    WHERE m.Compra_Numero IS NOT NULL
END
GO

EXEC GRANIZADO.MIGRAR_PROVINCIA
EXEC GRANIZADO.MIGRAR_LOCALIDAD
EXEC GRANIZADO.MIGRAR_DIRECCION
EXEC GRANIZADO.MIGRAR_SUCURSAL
EXEC GRANIZADO.MIGRAR_PROVEEDOR
EXEC GRANIZADO.MIGRAR_CLIENTE
EXEC GRANIZADO.MIGRAR_TIPO_MATERIAL
EXEC GRANIZADO.MIGRAR_MATERIAL
EXEC GRANIZADO.MIGRAR_MADERA
EXEC GRANIZADO.MIGRAR_TELA
EXEC GRANIZADO.MIGRAR_RELLENO
EXEC GRANIZADO.MIGRAR_MEDIDA
EXEC GRANIZADO.MIGRAR_MODELO
EXEC GRANIZADO.MIGRAR_SILLON
EXEC GRANIZADO.MIGRAR_MATERIAL_SILLON
EXEC GRANIZADO.MIGRAR_PEDIDO
EXEC GRANIZADO.MIGRAR_PEDIDO_CANCELADO
EXEC GRANIZADO.MIGRAR_DETALLE_PEDIDO
EXEC GRANIZADO.MIGRAR_FACTURA
EXEC GRANIZADO.MIGRAR_DETALLE_FACTURA
EXEC GRANIZADO.MIGRAR_ENVIO
EXEC GRANIZADO.MIGRAR_COMPRA
EXEC GRANIZADO.MIGRAR_DETALLE_COMPRA
GO

PRINT 'Migracion finalizada'
GO




-- Tabla BI_FACTURACION
CREATE TABLE GRANIZADO.BI_FACTURACION (
    id_factura INT PRIMARY KEY,
    id_tiempo INT,
    id_cliente INT,
    id_ubicacion INT,
    id_turno INT,
    monto_total DECIMAL(18,2)
    -- FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo),
    -- FOREIGN KEY (id_cliente) REFERENCES GRANIZADO.BI_CLIENTE(id_cliente),
    -- FOREIGN KEY (id_ubicacion) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion),
    -- FOREIGN KEY (id_turno) REFERENCES GRANIZADO.BI_TURNO(id_turno)
);
GO

-- Tabla BI_COMPRAS
CREATE TABLE GRANIZADO.BI_COMPRAS (
    id_compra INT PRIMARY KEY,
    id_tiempo INT,
    id_ubicacion INT,
    id_tipo_material INT,
    monto_total DECIMAL(18,2)
    -- FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo),
    -- FOREIGN KEY (id_ubicacion) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion),
    -- FOREIGN KEY (id_tipo_material) REFERENCES GRANIZADO.BI_TIPO_MATERIAL(id_tipo_material)
);
GO

-- Tabla BI_PEDIDOS
CREATE TABLE GRANIZADO.BI_PEDIDOS (
    id_pedido INT PRIMARY KEY,
    id_tiempo INT,
    id_cliente INT,
    id_ubicacion INT,
    id_turno INT,
    id_estado_pedido INT,
    id_modelo INT,
    cantidad INT,
    subtotal DECIMAL(18,2)
    -- FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo),
    -- FOREIGN KEY (id_cliente) REFERENCES GRANIZADO.BI_CLIENTE(id_cliente),
    -- FOREIGN KEY (id_ubicacion) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion),
    -- FOREIGN KEY (id_turno) REFERENCES GRANIZADO.BI_TURNO(id_turno),
    -- FOREIGN KEY (id_estado_pedido) REFERENCES GRANIZADO.BI_ESTADO_PEDIDO(id_estado_pedido),
    -- FOREIGN KEY (id_modelo) REFERENCES GRANIZADO.BI_MODELO(id_modelo)
);
GO

-- Tabla BI_ENVIOS
CREATE TABLE GRANIZADO.BI_ENVIOS (
    id_envio INT PRIMARY KEY,
    id_tiempo INT,
    id_cliente INT,
    id_ubicacion INT,
    envio_programado DATE,
    envio_real DATE,
    cumplido BIT,
    costo_total_envio DECIMAL(18,2)
    -- FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo),
    -- FOREIGN KEY (id_cliente) REFERENCES GRANIZADO.BI_CLIENTE(id_cliente),
    -- FOREIGN KEY (id_ubicacion) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion)
);
GO


CREATE TABLE GRANIZADO.BI_TIEMPO (
    id_tiempo INT PRIMARY KEY,
    anio INT,
    mes INT,
    cuatrimestre INT
);

CREATE TABLE GRANIZADO.BI_CLIENTE (
    id_cliente INT PRIMARY KEY,
    edad INT,
    rango_etario NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_UBICACION (
    id_ubicacion INT PRIMARY KEY,
    provincia NVARCHAR(100),
    localidad NVARCHAR(100)
);

CREATE TABLE GRANIZADO.BI_TURNO (
    id_turno INT PRIMARY KEY,
    descripcion_turno NVARCHAR(50)  -- Ej: "00-06", "06-12", etc.
);

CREATE TABLE GRANIZADO.BI_ESTADO_PEDIDO (
    id_estado_pedido INT PRIMARY KEY,
    descripcion_estado NVARCHAR(100) -- Ej: "Entregado", "Cancelado"
);

CREATE TABLE GRANIZADO.BI_MODELO (
    id_modelo INT PRIMARY KEY,
    nombre_modelo NVARCHAR(100)
);

CREATE TABLE GRANIZADO.BI_TIPO_MATERIAL (
    id_tipo_material INT PRIMARY KEY,
    tipo NVARCHAR(100) -- "Tela", "Madera", "Relleno"
);


ALTER TABLE GRANIZADO.BI_FACTURACION
ADD CONSTRAINT FK_BI_FACT_TIEMPO FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo),
    CONSTRAINT FK_BI_FACT_CLIENTE FOREIGN KEY (id_cliente) REFERENCES GRANIZADO.BI_CLIENTE(id_cliente),
    CONSTRAINT FK_BI_FACT_UBICACION FOREIGN KEY (id_ubicacion) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion),
    CONSTRAINT FK_BI_FACT_TURNO FOREIGN KEY (id_turno) REFERENCES GRANIZADO.BI_TURNO(id_turno);
GO

ALTER TABLE GRANIZADO.BI_COMPRAS
ADD CONSTRAINT FK_BI_COMP_TIEMPO FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo),
    CONSTRAINT FK_BI_COMP_UBICACION FOREIGN KEY (id_ubicacion) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion),
    CONSTRAINT FK_BI_COMP_TIPO_MAT FOREIGN KEY (id_tipo_material) REFERENCES GRANIZADO.BI_TIPO_MATERIAL(id_tipo_material);
GO

ALTER TABLE GRANIZADO.BI_PEDIDOS
ADD CONSTRAINT FK_BI_PED_TIEMPO FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo),
    CONSTRAINT FK_BI_PED_CLIENTE FOREIGN KEY (id_cliente) REFERENCES GRANIZADO.BI_CLIENTE(id_cliente),
    CONSTRAINT FK_BI_PED_UBICACION FOREIGN KEY (id_ubicacion) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion),
    CONSTRAINT FK_BI_PED_TURNO FOREIGN KEY (id_turno) REFERENCES GRANIZADO.BI_TURNO(id_turno),
    CONSTRAINT FK_BI_PED_ESTADO FOREIGN KEY (id_estado_pedido) REFERENCES GRANIZADO.BI_ESTADO_PEDIDO(id_estado_pedido),
    CONSTRAINT FK_BI_PED_MODELO FOREIGN KEY (id_modelo) REFERENCES GRANIZADO.BI_MODELO(id_modelo);
GO

ALTER TABLE GRANIZADO.BI_ENVIOS
ADD CONSTRAINT FK_BI_ENV_TIEMPO FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo),
    CONSTRAINT FK_BI_ENV_CLIENTE FOREIGN KEY (id_cliente) REFERENCES GRANIZADO.BI_CLIENTE(id_cliente),
    CONSTRAINT FK_BI_ENV_UBICACION FOREIGN KEY (id_ubicacion) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion);
GO

ALTER TABLE GRANIZADO.BI_ENVIOS
ADD CONSTRAINT FK_BI_ENV_TIEMPO FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo),
    CONSTRAINT FK_BI_ENV_CLIENTE FOREIGN KEY (id_cliente) REFERENCES GRANIZADO.BI_CLIENTE(id_cliente),
    CONSTRAINT FK_BI_ENV_UBICACION FOREIGN KEY (id_ubicacion) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion);
GO
