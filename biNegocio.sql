
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_COMPRAS_id_tiempo')
    ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS DROP CONSTRAINT FK_BI_HECHOS_COMPRAS_id_tiempo;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_COMPRAS_id_ubicacion')
    ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS DROP CONSTRAINT FK_BI_HECHOS_COMPRAS_id_ubicacion;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_COMPRAS_id_tipo_material')
    ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS DROP CONSTRAINT FK_BI_HECHOS_COMPRAS_id_tipo_material;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_tiempo')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_tiempo;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_rango_etario')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_rango_etario;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_ubicacion')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_ubicacion;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_turno')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_turno;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_estado_pedido')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_estado_pedido;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_modelo')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_modelo;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_sucursal')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_sucursal;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_FACTURACION_id_tiempo')
    ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION DROP CONSTRAINT FK_BI_HECHOS_FACTURACION_id_tiempo;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_FACTURACION_id_rango_etario')
    ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION DROP CONSTRAINT FK_BI_HECHOS_FACTURACION_id_rango_etario;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_FACTURACION_id_ubicacion_sucursal')
    ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION DROP CONSTRAINT FK_BI_HECHOS_FACTURACION_id_ubicacion_sucursal;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_FACTURACION_id_turno')
    ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION DROP CONSTRAINT FK_BI_HECHOS_FACTURACION_id_turno;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_FACTURACION_id_sucursal')
    ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION DROP CONSTRAINT FK_BI_HECHOS_FACTURACION_id_sucursal;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_ENVIOS_id_tiempo')
    ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS DROP CONSTRAINT FK_BI_HECHOS_ENVIOS_id_tiempo;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_ENVIOS_id_rango_etario')
    ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS DROP CONSTRAINT FK_BI_HECHOS_ENVIOS_id_rango_etario;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_ENVIOS_id_ubicacion_cliente')
    ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS DROP CONSTRAINT FK_BI_HECHOS_ENVIOS_id_ubicacion_cliente;
	
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_FABRICACION_TIEMPO')
    ALTER TABLE GRANIZADO.BI_HECHOS_TIEMPO_FABRICACION DROP CONSTRAINT FK_FABRICACION_TIEMPO;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_FABRICACION_SUCURSAL')
    ALTER TABLE GRANIZADO.BI_HECHOS_TIEMPO_FABRICACION DROP CONSTRAINT FK_FABRICACION_SUCURSAL;

GO

IF OBJECT_ID('GRANIZADO.BI_HECHOS_ENVIOS', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_HECHOS_ENVIOS;
IF OBJECT_ID('GRANIZADO.BI_HECHOS_FACTURACION', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_HECHOS_FACTURACION;
IF OBJECT_ID('GRANIZADO.BI_HECHOS_PEDIDOS', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_HECHOS_PEDIDOS;
IF OBJECT_ID('GRANIZADO.BI_HECHOS_COMPRAS', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_HECHOS_COMPRAS;

IF OBJECT_ID('GRANIZADO.BI_SUCURSAL', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_SUCURSAL;
IF OBJECT_ID('GRANIZADO.BI_TIEMPO', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_TIEMPO;
IF OBJECT_ID('GRANIZADO.BI_TIPO_MATERIAL', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_TIPO_MATERIAL;
IF OBJECT_ID('GRANIZADO.BI_RANGO_ETARIO', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_RANGO_ETARIO;
IF OBJECT_ID('GRANIZADO.BI_TURNO', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_TURNO;
IF OBJECT_ID('GRANIZADO.BI_MODELO', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_MODELO;
IF OBJECT_ID('GRANIZADO.BI_ESTADO_PEDIDO', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_ESTADO_PEDIDO;
IF OBJECT_ID('GRANIZADO.BI_UBICACION', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_UBICACION;
IF OBJECT_ID('GRANIZADO.BI_HECHOS_TIEMPO_FABRICACION', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_HECHOS_TIEMPO_FABRICACION;

GO


IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'GRANIZADO')
BEGIN
    EXEC('CREATE SCHEMA GRANIZADO');
END;
GO


CREATE TABLE GRANIZADO.BI_UBICACION (
    id_ubicacion INT IDENTITY(1,1) NOT NULL,
    provincia NVARCHAR(50),
    localidad NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_ESTADO_PEDIDO (
    id_estado_pedido INT IDENTITY(1,1) NOT NULL,
    descripcion_estado NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_MODELO (
    id_modelo INT IDENTITY(1,1) NOT NULL,
    nombre_modelo NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_TURNO (
    id_turno INT IDENTITY(1,1) NOT NULL,
    hora_inicial TIME,
	hora_final TIME
);

CREATE TABLE GRANIZADO.BI_RANGO_ETARIO (
    id_rango_etario INT IDENTITY(1,1) NOT NULL,
    rango_menor INT,
	rango_mayor INT
);

CREATE TABLE GRANIZADO.BI_TIPO_MATERIAL (
    id_tipo_material INT IDENTITY(1,1) NOT NULL,
    tipo NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_TIEMPO (
    id_tiempo INT IDENTITY(1,1) NOT NULL,
    anio INT,
    mes INT,
    cuatrimestre INT
);

CREATE TABLE GRANIZADO.BI_SUCURSAL (
    id_sucursal INT IDENTITY(1,1) NOT NULL,
	nro_sucursal BIGINT NOT NULL
);


-- TABLAS DE HECHOS
CREATE TABLE GRANIZADO.BI_HECHOS_COMPRAS (
    id_compra INT IDENTITY(1,1) NOT NULL,
    id_tiempo INT NOT NULL,
    id_ubicacion_sucursal INT NOT NULL,
	id_sucursal INT NOT NULL,
    id_tipo_material INT NOT NULL,
    monto_total DECIMAL(12,4)
);

CREATE TABLE GRANIZADO.BI_HECHOS_PEDIDOS (
    id_pedido INT IDENTITY(1,1) NOT NULL,
    id_tiempo INT NOT NULL,
    id_rango_etario INT NOT NULL,
    id_turno INT NOT NULL,
    id_estado_pedido INT NOT NULL,
    id_modelo INT NOT NULL,
    id_sucursal INT NOT NULL,
    cantidad INT
);

CREATE TABLE GRANIZADO.BI_HECHOS_FACTURACION (
    id_factura INT IDENTITY(1,1) NOT NULL,
    id_tiempo INT NOT NULL,
    id_rango_etario INT NOT NULL,
    id_ubicacion_sucursal INT NOT NULL,
    id_turno INT NOT NULL,
    id_sucursal INT NOT NULL,
    monto_total DECIMAL(12,4)
);

CREATE TABLE GRANIZADO.BI_HECHOS_ENVIOS (
    id_envio INT IDENTITY(1,1) NOT NULL,
    id_tiempo INT NOT NULL,
    id_rango_etario INT NOT NULL,
    id_ubicacion_cliente INT NOT NULL,
    cumplido BIT,
    costo_total_envio DECIMAL(12,4)
);

CREATE TABLE GRANIZADO.BI_HECHOS_TIEMPO_FABRICACION (
    id_fabricacion INT IDENTITY(1,1) NOT NULL,
    id_tiempo INT NOT NULL,
    id_sucursal INT NOT NULL,
    dias_hasta_factura INT
);



-- CLAVES PRIMARIAS
ALTER TABLE GRANIZADO.BI_UBICACION ADD CONSTRAINT PK_BI_UBICACION PRIMARY KEY (id_ubicacion);
ALTER TABLE GRANIZADO.BI_ESTADO_PEDIDO ADD CONSTRAINT PK_BI_ESTADO_PEDIDO PRIMARY KEY (id_estado_pedido);
ALTER TABLE GRANIZADO.BI_MODELO ADD CONSTRAINT PK_BI_MODELO PRIMARY KEY (id_modelo);
ALTER TABLE GRANIZADO.BI_TURNO ADD CONSTRAINT PK_BI_TURNO PRIMARY KEY (id_turno);
ALTER TABLE GRANIZADO.BI_RANGO_ETARIO ADD CONSTRAINT PK_BI_RANGO_ETARIO PRIMARY KEY (id_rango_etario);
ALTER TABLE GRANIZADO.BI_TIPO_MATERIAL ADD CONSTRAINT PK_BI_TIPO_MATERIAL PRIMARY KEY (id_tipo_material);
ALTER TABLE GRANIZADO.BI_TIEMPO ADD CONSTRAINT PK_BI_TIEMPO PRIMARY KEY (id_tiempo);
ALTER TABLE GRANIZADO.BI_SUCURSAL ADD CONSTRAINT PK_BI_SUCURSAL PRIMARY KEY (id_sucursal);
ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS ADD CONSTRAINT PK_BI_HECHOS_COMPRAS PRIMARY KEY (id_compra);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT PK_BI_HECHOS_PEDIDOS PRIMARY KEY (id_pedido);
ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT PK_BI_HECHOS_FACTURACION PRIMARY KEY (id_factura);
ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS ADD CONSTRAINT PK_BI_HECHOS_ENVIOS PRIMARY KEY (id_envio);
ALTER TABLE GRANIZADO.BI_HECHOS_TIEMPO_FABRICACION ADD CONSTRAINT PK_BI_HECHOS_TIEMPO_FABRICACION PRIMARY KEY (id_fabricacion);

-- CLAVES FOR√ÅNEAS
ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS ADD CONSTRAINT FK_BI_HECHOS_COMPRAS_id_tiempo FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo);
ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS ADD CONSTRAINT FK_BI_HECHOS_COMPRAS_id_ubicacion FOREIGN KEY (id_ubicacion_sucursal) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion);
ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS ADD CONSTRAINT FK_BI_HECHOS_COMPRAS_id_tipo_material FOREIGN KEY (id_tipo_material) REFERENCES GRANIZADO.BI_TIPO_MATERIAL(id_tipo_material);
ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS ADD CONSTRAINT FK_BI_HECHOS_COMPRAS_id_sucursal FOREIGN KEY (id_sucursal) REFERENCES GRANIZADO.BI_SUCURSAL(id_sucursal);

ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_tiempo FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_rango_etario FOREIGN KEY (id_rango_etario) REFERENCES GRANIZADO.BI_RANGO_ETARIO(id_rango_etario);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_turno FOREIGN KEY (id_turno) REFERENCES GRANIZADO.BI_TURNO(id_turno);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_estado_pedido FOREIGN KEY (id_estado_pedido) REFERENCES GRANIZADO.BI_ESTADO_PEDIDO(id_estado_pedido);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_modelo FOREIGN KEY (id_modelo) REFERENCES GRANIZADO.BI_MODELO(id_modelo);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_sucursal FOREIGN KEY (id_sucursal) REFERENCES GRANIZADO.BI_SUCURSAL(id_sucursal);

ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT FK_BI_HECHOS_FACTURACION_id_tiempo FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo);
ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT FK_BI_HECHOS_FACTURACION_id_rango_etario FOREIGN KEY (id_rango_etario) REFERENCES GRANIZADO.BI_RANGO_ETARIO(id_rango_etario);
ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT FK_BI_HECHOS_FACTURACION_id_ubicacion_sucursal FOREIGN KEY (id_ubicacion_sucursal) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion);
ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT FK_BI_HECHOS_FACTURACION_id_turno FOREIGN KEY (id_turno) REFERENCES GRANIZADO.BI_TURNO(id_turno);
ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT FK_BI_HECHOS_FACTURACION_id_sucursal FOREIGN KEY (id_sucursal) REFERENCES GRANIZADO.BI_SUCURSAL(id_sucursal);

ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS ADD CONSTRAINT FK_BI_HECHOS_ENVIOS_id_tiempo FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo);
ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS ADD CONSTRAINT FK_BI_HECHOS_ENVIOS_id_rango_etario FOREIGN KEY (id_rango_etario) REFERENCES GRANIZADO.BI_RANGO_ETARIO(id_rango_etario);
ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS ADD CONSTRAINT FK_BI_HECHOS_ENVIOS_id_ubicacion_cliente FOREIGN KEY (id_ubicacion_cliente) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion);

ALTER TABLE GRANIZADO.BI_HECHOS_TIEMPO_FABRICACION ADD CONSTRAINT FK_FABRICACION_TIEMPO FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo);
ALTER TABLE GRANIZADO.BI_HECHOS_TIEMPO_FABRICACION ADD CONSTRAINT FK_FABRICACION_SUCURSAL FOREIGN KEY (id_sucursal) REFERENCES GRANIZADO.BI_SUCURSAL(id_sucursal);

go

--------------------------

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_TIEMPO', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_TIEMPO;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_UBICACION', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_UBICACION;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_RANGO_ETARIO', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_RANGO_ETARIO;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_TURNO', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_TURNO;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_TIPO_MATERIAL', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_TIPO_MATERIAL;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_MODELO', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_MODELO;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_PEDIDO', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_PEDIDO;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_SUCURSAL', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_SUCURSAL;
GO


IF OBJECT_ID('GRANIZADO.MIGRAR_BI_HECHOS_COMPRAS', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_HECHOS_COMPRAS;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_HECHOS_PEDIDOS', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_HECHOS_PEDIDOS;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_HECHOS_FACTURACION', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_HECHOS_FACTURACION;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_HECHOS_ENVIOS', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_HECHOS_ENVIOS;
GO

IF OBJECT_ID('GRANIZADO.MIGRAR_BI_HECHOS_TIEMPO_FABRICACION', 'P') IS NOT NULL
    DROP PROCEDURE GRANIZADO.MIGRAR_BI_HECHOS_TIEMPO_FABRICACION;
GO

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_TIEMPO
as
begin
   INSERT INTO GRANIZADO.BI_TIEMPO(ANIO, MES, CUATRIMESTRE)
	SELECT DISTINCT
		YEAR(FACTURA.Factura_Fecha),
		MONTH(FACTURA.Factura_Fecha),
		CASE
			WHEN MONTH(FACTURA.Factura_Fecha) <= 4 THEN '1'
			WHEN MONTH(FACTURA.Factura_Fecha) <= 8 THEN '2'
			WHEN MONTH(FACTURA.Factura_Fecha) <= 12 THEN '3'
		END 
		FROM GRANIZADO.FACTURA
end
go

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_UBICACION --revisar porque la pk empieza muy arriba (igual anda)
as
begin
   INSERT INTO GRANIZADO.BI_UBICACION (localidad,provincia)
   SELECT l.localidad_nombre,p.prov_nombre from GRANIZADO.LOCALIDAD l join GRANIZADO.PROVINCIA p
   on l.provincia_id = p.provincia_id
end
go


CREATE PROCEDURE GRANIZADO.MIGRAR_BI_RANGO_ETARIO
as
begin
   INSERT INTO GRANIZADO.BI_RANGO_ETARIO
   VALUES (0,25),
		(25, 35),
		(35,50),
		(50, 150)
end
go


CREATE PROCEDURE GRANIZADO.MIGRAR_BI_TURNO
as
begin
   INSERT INTO GRANIZADO.BI_TURNO
   VALUES ('8:00:00', '14:00:00'),
		('14:00:00', '20:00:00')
end
go

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_TIPO_MATERIAL
as
begin
   INSERT INTO GRANIZADO.BI_TIPO_MATERIAL
   select tipo_nombre from GRANIZADO.TIPO_MATERIAL
end
go

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_MODELO
as
begin
   INSERT INTO GRANIZADO.BI_MODELO
   SELECT nombre_modelo FROM GRANIZADO.MODELO
end
go

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_PEDIDO
as
begin
   INSERT INTO GRANIZADO.BI_ESTADO_PEDIDO
   select distinct Pedido_Estado from GRANIZADO.PEDIDO
end
go

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_SUCURSAL
AS
BEGIN
    INSERT INTO GRANIZADO.BI_SUCURSAL (nro_sucursal)
    SELECT 
        Sucursal_NroSucursal
    FROM GRANIZADO.SUCURSAL;
END
GO

-- INSERT HECHOS
CREATE OR ALTER PROCEDURE GRANIZADO.MIGRAR_BI_HECHOS_COMPRAS
AS
BEGIN
    INSERT INTO GRANIZADO.BI_HECHOS_COMPRAS (
        id_tiempo, 
        id_ubicacion_sucursal, 
        id_sucursal, 
        id_tipo_material, 
        monto_total
    )
    SELECT 
        T.id_tiempo,
        U.id_ubicacion,
        S.id_sucursal,
        TM.id_tipo_material,
        SUM(DC.Detalle_Compra_SubTotal) AS monto_total
    FROM GRANIZADO.DETALLE_COMPRA DC
    JOIN GRANIZADO.COMPRA C ON C.compra_id = DC.compra_id
    JOIN GRANIZADO.SUCURSAL SU ON SU.Sucursal_NroSucursal = C.Sucursal_NroSucursal
    JOIN GRANIZADO.DIRECCION DIR ON DIR.direccion_id = SU.direccion_id
    JOIN GRANIZADO.LOCALIDAD L ON L.localidad_id = DIR.localidad_id
    JOIN GRANIZADO.PROVINCIA P ON P.provincia_id = L.provincia_id
    JOIN GRANIZADO.BI_UBICACION U ON U.localidad = L.localidad_nombre AND U.provincia = P.prov_nombre
    JOIN GRANIZADO.BI_SUCURSAL S ON S.nro_sucursal = SU.Sucursal_NroSucursal
    JOIN GRANIZADO.MATERIAL M ON M.mat_id = DC.mat_id
    JOIN GRANIZADO.TIPO_MATERIAL TMAT ON TMAT.tipo_material_id = M.tipo_material_id
    JOIN GRANIZADO.BI_TIPO_MATERIAL TM ON TM.tipo = TMAT.tipo_nombre
    JOIN GRANIZADO.BI_TIEMPO T ON T.anio = YEAR(C.Compra_Fecha) AND T.mes = MONTH(C.Compra_Fecha)
    GROUP BY 
        T.id_tiempo,
        U.id_ubicacion,
        S.id_sucursal,
        TM.id_tipo_material
END
GO

--SELECT * FROM GRANIZADO.BI_HECHOS_COMPRAS ORDER BY monto_total

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_HECHOS_PEDIDOS
AS
BEGIN
    INSERT INTO GRANIZADO.BI_HECHOS_PEDIDOS (id_tiempo, id_rango_etario, id_turno, id_estado_pedido, id_modelo, id_sucursal, cantidad)
    SELECT 
        T.id_tiempo,
        RE.id_rango_etario,
        TU.id_turno,
        EP.id_estado_pedido,
        MO.id_modelo,
        S.id_sucursal,
        DP.Detalle_Pedido_Cantidad
    FROM GRANIZADO.PEDIDO P
    JOIN GRANIZADO.DETALLE_PEDIDO DP ON DP.Pedido_Numero = P.Pedido_Numero AND DP.Sucursal_NroSucursal = P.Sucursal_NroSucursal
    JOIN GRANIZADO.SILLON SI ON SI.Sillon_Codigo = DP.Sillon_Codigo
    JOIN GRANIZADO.MODELO M ON M.mod_id = SI.Sillon_Modelo_Codigo
    JOIN GRANIZADO.BI_MODELO MO ON MO.nombre_modelo = M.nombre_modelo
    JOIN GRANIZADO.CLIENTE C ON C.cli_id = P.cli_id
    JOIN GRANIZADO.BI_SUCURSAL S ON S.nro_sucursal = P.Sucursal_NroSucursal
    JOIN GRANIZADO.BI_ESTADO_PEDIDO EP ON EP.descripcion_estado = P.Pedido_Estado
    JOIN GRANIZADO.BI_TIEMPO T ON T.anio = YEAR(P.Pedido_Fecha) AND T.mes = MONTH(P.Pedido_Fecha)
    JOIN GRANIZADO.BI_RANGO_ETARIO RE ON 
        DATEDIFF(YEAR, C.Cliente_FechaNacimiento, P.Pedido_Fecha) BETWEEN RE.rango_menor AND RE.rango_mayor
    JOIN GRANIZADO.BI_TURNO TU ON 
        CAST(FORMAT(P.Pedido_Fecha, 'HH:mm:ss') AS TIME) BETWEEN TU.hora_inicial AND TU.hora_final
END
GO

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_HECHOS_FACTURACION
AS
BEGIN
    INSERT INTO GRANIZADO.BI_HECHOS_FACTURACION (id_tiempo, id_rango_etario, id_ubicacion_sucursal, id_turno, id_sucursal, monto_total)
    SELECT 
        T.id_tiempo,
        RE.id_rango_etario,
        U.id_ubicacion,
        TU.id_turno,
        S.id_sucursal,
        F.Factura_Total
    FROM GRANIZADO.FACTURA F
    JOIN GRANIZADO.CLIENTE C ON C.cli_id = F.cli_id
    JOIN GRANIZADO.SUCURSAL SU ON SU.Sucursal_NroSucursal = F.Sucursal_NroSucursal
    JOIN GRANIZADO.DIRECCION DIR ON DIR.direccion_id = SU.direccion_id
    JOIN GRANIZADO.LOCALIDAD L ON L.localidad_id = DIR.localidad_id
    JOIN GRANIZADO.PROVINCIA P ON P.provincia_id = L.provincia_id
    JOIN GRANIZADO.BI_UBICACION U ON U.localidad = L.localidad_nombre AND U.provincia = P.prov_nombre
    JOIN GRANIZADO.BI_SUCURSAL S ON S.nro_sucursal = SU.Sucursal_NroSucursal
    JOIN GRANIZADO.BI_TIEMPO T ON T.anio = YEAR(F.Factura_Fecha) AND T.mes = MONTH(F.Factura_Fecha)
    JOIN GRANIZADO.BI_RANGO_ETARIO RE ON 
        DATEDIFF(YEAR, C.Cliente_FechaNacimiento, F.Factura_Fecha) BETWEEN RE.rango_menor AND RE.rango_mayor
    JOIN GRANIZADO.BI_TURNO TU ON 
        CAST(FORMAT(F.Factura_Fecha, 'HH:mm:ss') AS TIME) BETWEEN TU.hora_inicial AND TU.hora_final
END
GO



CREATE PROCEDURE GRANIZADO.MIGRAR_BI_HECHOS_ENVIOS
AS
BEGIN
    INSERT INTO GRANIZADO.BI_HECHOS_ENVIOS (id_tiempo, id_rango_etario, id_ubicacion_cliente, cumplido, costo_total_envio)
    SELECT 
        T.id_tiempo,
        RE.id_rango_etario,
        U.id_ubicacion,
        CASE WHEN  E.Envio_Fecha <= E.Envio_Fecha_Programada THEN 1 ELSE 0 END,
        E.Envio_Total
    FROM GRANIZADO.ENVIO E
    JOIN GRANIZADO.FACTURA F ON F.Factura_Numero = E.Factura_Numero
    JOIN GRANIZADO.CLIENTE C ON C.cli_id = F.cli_id
    JOIN GRANIZADO.DIRECCION DIR ON DIR.direccion_id = C.direccion_id
    JOIN GRANIZADO.LOCALIDAD L ON L.localidad_id = DIR.localidad_id
    JOIN GRANIZADO.PROVINCIA P ON P.provincia_id = L.provincia_id
    JOIN GRANIZADO.BI_UBICACION U ON U.localidad = L.localidad_nombre AND U.provincia = P.prov_nombre
    JOIN GRANIZADO.BI_TIEMPO T ON T.anio = YEAR(E.Envio_Fecha_Programada) AND T.mes = MONTH(E.Envio_Fecha_Programada)
    JOIN GRANIZADO.BI_RANGO_ETARIO RE ON 
        DATEDIFF(YEAR, C.Cliente_FechaNacimiento, E.Envio_Fecha_Programada) BETWEEN RE.rango_menor AND RE.rango_mayor
END
GO

CREATE OR ALTER PROCEDURE GRANIZADO.MIGRAR_BI_HECHOS_TIEMPO_FABRICACION AS
BEGIN
    INSERT INTO GRANIZADO.BI_HECHOS_TIEMPO_FABRICACION (id_tiempo, id_sucursal, dias_hasta_factura)
    SELECT 
        T.id_tiempo,
        S.id_sucursal,
        DATEDIFF(DAY, P.Pedido_Fecha, F.Factura_Fecha) AS dias
    FROM GRANIZADO.FACTURA F
    JOIN GRANIZADO.DETALLE_FACTURA DF ON DF.Factura_Numero = F.Factura_Numero
    JOIN GRANIZADO.PEDIDO P ON P.Pedido_Numero = DF.Pedido_Numero
    JOIN GRANIZADO.BI_SUCURSAL S ON S.nro_sucursal = F.Sucursal_NroSucursal
    JOIN GRANIZADO.BI_TIEMPO T ON T.anio = YEAR(F.Factura_Fecha) AND T.mes = MONTH(F.Factura_Fecha)
    WHERE F.Factura_Fecha >= P.Pedido_Fecha
END
GO



EXEC GRANIZADO.MIGRAR_BI_TIEMPO;
EXEC GRANIZADO.MIGRAR_BI_UBICACION;
EXEC GRANIZADO.MIGRAR_BI_RANGO_ETARIO;
EXEC GRANIZADO.MIGRAR_BI_TURNO;
EXEC GRANIZADO.MIGRAR_BI_TIPO_MATERIAL;
EXEC GRANIZADO.MIGRAR_BI_MODELO;
EXEC GRANIZADO.MIGRAR_BI_PEDIDO;
EXEC GRANIZADO.MIGRAR_BI_SUCURSAL;

EXEC GRANIZADO.MIGRAR_BI_HECHOS_COMPRAS;
EXEC GRANIZADO.MIGRAR_BI_HECHOS_PEDIDOS;
EXEC GRANIZADO.MIGRAR_BI_HECHOS_FACTURACION;
EXEC GRANIZADO.MIGRAR_BI_HECHOS_ENVIOS;
EXEC GRANIZADO.MIGRAR_BI_HECHOS_TIEMPO_FABRICACION;


-- ME DA 171 COINCIDE CON 171

CREATE or alter VIEW GRANIZADO.VW_GANANCIAS_MENSUALES AS
SELECT 
    t.anio,
    t.mes,
    s.id_sucursal,
    SUM(f.monto_total) - ISNULL(SUM(c.monto_total), 0) AS ganancia
FROM GRANIZADO.BI_HECHOS_FACTURACION f
JOIN GRANIZADO.BI_TIEMPO t ON f.id_tiempo = t.id_tiempo
JOIN GRANIZADO.BI_SUCURSAL s ON f.id_sucursal = s.id_sucursal
LEFT JOIN GRANIZADO.BI_HECHOS_COMPRAS c 
    ON c.id_tiempo = f.id_tiempo AND c.id_ubicacion_sucursal = f.id_sucursal
GROUP BY t.anio, t.mes, s.id_sucursal;

SELECT * FROM GRANIZADO.VW_GANANCIAS_MENSUALES


--2) Factura promedio mensual. ME DA 35 COINCIDE

CREATE or alter VIEW GRANIZADO.VW_FACTURA_PROM_CUATRIMESTRAL AS
SELECT 
    t.anio,
    t.cuatrimestre,
    u.provincia,
    AVG(f.monto_total) AS factura_promedio
FROM GRANIZADO.BI_HECHOS_FACTURACION f
JOIN GRANIZADO.BI_TIEMPO t ON f.id_tiempo = t.id_tiempo
JOIN GRANIZADO.BI_UBICACION u ON f.id_ubicacion_sucursal = u.id_ubicacion
GROUP BY t.anio, t.cuatrimestre, u.provincia;

SELECT * FROM GRANIZADO.VW_FACTURA_PROM_CUATRIMESTRAL

--3)Rendimiento de modelos. 

CREATE or alter VIEW GRANIZADO.VW_TOP3_MODELOS_VENTAS AS
SELECT *
FROM (
    SELECT 
        t.anio,
        t.cuatrimestre,
        u.localidad,
        re.id_rango_etario,
        m.nombre_modelo,
        SUM(p.cantidad) AS total_vendido,
        RANK() OVER (PARTITION BY t.anio, t.cuatrimestre, u.localidad, re.id_rango_etario 
                     ORDER BY SUM(p.cantidad) DESC) AS ranking
    FROM GRANIZADO.BI_HECHOS_PEDIDOS p
    JOIN GRANIZADO.BI_TIEMPO t ON p.id_tiempo = t.id_tiempo
    JOIN GRANIZADO.BI_SUCURSAL s ON p.id_sucursal = s.id_sucursal
    JOIN GRANIZADO.BI_UBICACION u ON s.id_ubicacion = u.id_ubicacion
    JOIN GRANIZADO.BI_MODELO m ON p.id_modelo = m.id_modelo
    JOIN GRANIZADO.BI_RANGO_ETARIO re ON p.id_rango_etario = re.id_rango_etario
    GROUP BY t.anio, t.cuatrimestre, u.localidad, re.id_rango_etario, m.nombre_modelo
) AS sub
WHERE ranking <= 3;

SELECT * FROM GRANIZADO.VW_TOP3_MODELOS_VENTAS

--4)Volumen de pedidos. ME DA 342 COINCIDE

CREATE or alter VIEW GRANIZADO.VW_VOLUMEN_PEDIDOS AS
SELECT 
    t.anio,
    t.mes,
    p.id_turno,
    s.id_sucursal,
    COUNT(*) AS cantidad_pedidos
FROM GRANIZADO.BI_HECHOS_PEDIDOS p
JOIN GRANIZADO.BI_TIEMPO t ON p.id_tiempo = t.id_tiempo
JOIN GRANIZADO.BI_SUCURSAL s ON p.id_sucursal = s.id_sucursal
GROUP BY t.anio, t.mes, p.id_turno, s.id_sucursal;

SELECT * FROM GRANIZADO.VW_VOLUMEN_PEDIDOS

select * from GRANIZADO.BI_TURNO -- 2 (turno) * 9 (sucursales) * 19 (meses) = 342
select * from GRANIZADO.BI_SUCURSAL
select * from GRANIZADO.BI_TIEMPO
select Pedido_Fecha from GRANIZADO.PEDIDO order by Pedido_Fecha



--5)Conversi√≥n de pedidos.  ME DA 90 COINCIDE CON 90

CREATE or alter VIEW GRANIZADO.VW_CONVERSION_PEDIDOS AS
SELECT 
    t.cuatrimestre,
    t.anio,
    s.id_sucursal,
    e.descripcion_estado,
    COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY t.anio, t.cuatrimestre, s.id_sucursal) AS porcentaje
FROM GRANIZADO.BI_HECHOS_PEDIDOS p
JOIN GRANIZADO.BI_TIEMPO t ON p.id_tiempo = t.id_tiempo
JOIN GRANIZADO.BI_ESTADO_PEDIDO e ON p.id_estado_pedido = e.id_estado_pedido
JOIN GRANIZADO.BI_SUCURSAL s ON p.id_sucursal = s.id_sucursal
GROUP BY t.anio, t.cuatrimestre, s.id_sucursal, e.descripcion_estado;

SELECT * FROM GRANIZADO.VW_CONVERSION_PEDIDOS

--6)Tiempo promedio de fabricaci√≥n: -- me da 45 COINCIDE

CREATE OR ALTER VIEW GRANIZADO.VW_TIEMPO_PROM_FABRICACION AS
SELECT 
    t.cuatrimestre,
    t.anio,
    s.id_sucursal,
    AVG(tf.dias_hasta_factura) AS dias_promedio
FROM GRANIZADO.BI_HECHOS_TIEMPO_FABRICACION tf
JOIN GRANIZADO.BI_TIEMPO t ON tf.id_tiempo = t.id_tiempo
JOIN GRANIZADO.BI_SUCURSAL s ON tf.id_sucursal = s.id_sucursal
GROUP BY t.anio, t.cuatrimestre, s.id_sucursal;


SELECT * FROM GRANIZADO.VW_TIEMPO_PROM_FABRICACION

--7)Promedio de Compras ME DA 19 COINCIDE

CREATE OR ALTER VIEW GRANIZADO.VW_PROMEDIO_COMPRAS_MENSUAL AS
SELECT 
    t.anio,
    t.mes,
    AVG(compra_por_mes.total_compra) AS promedio_compras
FROM (
    SELECT 
        c.id_tiempo,
        SUM(c.monto_total) AS total_compra
    FROM GRANIZADO.BI_HECHOS_COMPRAS c
    GROUP BY c.id_tiempo
) compra_por_mes
JOIN GRANIZADO.BI_TIEMPO t ON t.id_tiempo = compra_por_mes.id_tiempo
GROUP BY t.anio, t.mes;


SELECT * FROM GRANIZADO.VW_PROMEDIO_COMPRAS_MENSUAL ORDER BY promedio_compras

--8)Compras por tipo de material, sucursal y cuatrimestre  ---- ME DA 114 

CREATE OR ALTER VIEW GRANIZADO.VW_COMPRAS_POR_MATERIAL AS
SELECT 
    t.anio,
    t.cuatrimestre,
    s.id_sucursal,
    m.tipo,
    SUM(c.monto_total) AS total_compras
FROM GRANIZADO.BI_HECHOS_COMPRAS c
JOIN GRANIZADO.BI_TIEMPO t ON c.id_tiempo = t.id_tiempo
JOIN GRANIZADO.BI_TIPO_MATERIAL m ON c.id_tipo_material = m.id_tipo_material
JOIN GRANIZADO.BI_SUCURSAL s ON c.id_sucursal = s.id_sucursal
GROUP BY t.anio, t.cuatrimestre, s.id_sucursal, m.tipo;

SELECT * FROM GRANIZADO.VW_COMPRAS_POR_MATERIAL ORDER BY total_compras

--9)Porcentaje de cumplimiento de env√≠os por mes CHEQUEAR PORCENTAJES ME DA 19 CUMPLE

CREATE or alter VIEW GRANIZADO.VW_CUMPLIMIENTO_ENVIOS AS
SELECT 
    t.anio,
    t.mes,
    COUNT(CASE WHEN e.cumplido = 1 THEN 1 END) * 100.0 / COUNT(*) AS porcentaje_cumplimiento
FROM GRANIZADO.BI_HECHOS_ENVIOS e
JOIN GRANIZADO.BI_TIEMPO t ON e.id_tiempo = t.id_tiempo
GROUP BY t.anio, t.mes;

SELECT * FROM GRANIZADO.VW_CUMPLIMIENTO_ENVIOS

--10)Top 3 localidades con mayor costo de env√≠o promedio ME DA 3 COINCIDE

CREATE or alter VIEW GRANIZADO.VW_TOP3_COSTO_ENVIO_LOCALIDAD AS
SELECT *
FROM (
    SELECT 
        u.localidad,
        AVG(e.costo_total_envio) AS costo_promedio,
        RANK() OVER (ORDER BY AVG(e.costo_total_envio) DESC) AS ranking
    FROM GRANIZADO.BI_HECHOS_ENVIOS e
    JOIN GRANIZADO.BI_UBICACION u ON e.id_ubicacion_cliente = u.id_ubicacion
    GROUP BY u.localidad
) AS sub
WHERE ranking <= 3;

SELECT * FROM GRANIZADO.VW_TOP3_COSTO_ENVIO_LOCALIDAD