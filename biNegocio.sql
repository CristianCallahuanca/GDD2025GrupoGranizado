

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_COMPRAS_id_tiempo')
    ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS DROP CONSTRAINT FK_BI_HECHOS_COMPRAS_id_tiempo;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_COMPRAS_id_ubicacion')
    ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS DROP CONSTRAINT FK_BI_HECHOS_COMPRAS_id_ubicacion;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_COMPRAS_id_tipo_material')
    ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS DROP CONSTRAINT FK_BI_HECHOS_COMPRAS_id_tipo_material;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_tiempo')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_tiempo;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_rango_etario')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_rango_etario;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_ubicacion')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_ubicacion;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_turno')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_turno;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_estado_pedido')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_estado_pedido;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_modelo')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_modelo;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_PEDIDOS_id_sucursal')
    ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS DROP CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_sucursal;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_FACTURACION_id_tiempo')
    ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION DROP CONSTRAINT FK_BI_HECHOS_FACTURACION_id_tiempo;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_FACTURACION_id_rango_etario')
    ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION DROP CONSTRAINT FK_BI_HECHOS_FACTURACION_id_rango_etario;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_FACTURACION_id_ubicacion_sucursal')
    ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION DROP CONSTRAINT FK_BI_HECHOS_FACTURACION_id_ubicacion_sucursal;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_FACTURACION_id_turno')
    ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION DROP CONSTRAINT FK_BI_HECHOS_FACTURACION_id_turno;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_FACTURACION_id_sucursal')
    ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION DROP CONSTRAINT FK_BI_HECHOS_FACTURACION_id_sucursal;

IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_ENVIOS_id_tiempo')
    ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS DROP CONSTRAINT FK_BI_HECHOS_ENVIOS_id_tiempo;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_ENVIOS_id_rango_etario')
    ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS DROP CONSTRAINT FK_BI_HECHOS_ENVIOS_id_rango_etario;
IF EXISTS (SELECT 1 FROM sys.foreign_keys WHERE name = 'FK_BI_HECHOS_ENVIOS_id_ubicacion_cliente')
    ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS DROP CONSTRAINT FK_BI_HECHOS_ENVIOS_id_ubicacion_cliente;
GO



IF OBJECT_ID('GRANIZADO.BI_HECHOS_ENVIOS', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_HECHOS_ENVIOS;
IF OBJECT_ID('GRANIZADO.BI_HECHOS_FACTURACION', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_HECHOS_FACTURACION;
IF OBJECT_ID('GRANIZADO.BI_HECHOS_PEDIDOS', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_HECHOS_PEDIDOS;
IF OBJECT_ID('GRANIZADO.BI_HECHOS_COMPRAS', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_HECHOS_COMPRAS;

IF OBJECT_ID('GRANIZADO.BI_SUCURSAL', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_SUCURSAL;
IF OBJECT_ID('GRANIZADO.BI_TIEMPO', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_TIEMPO;
IF OBJECT_ID('GRANIZADO.BI_TIPO_MATERIAL', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_TIPO_MATERIAL;
IF OBJECT_ID('GRANIZADO.BI_RANGO_ETARIO', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_RANGO_ETARIO;
IF OBJECT_ID('GRANIZADO.BI_TURNO', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_TURNO;
IF OBJECT_ID('GRANIZADO.BI_MODELO', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_MODELO;
IF OBJECT_ID('GRANIZADO.BI_ESTADO_PEDIDO', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_ESTADO_PEDIDO;
IF OBJECT_ID('GRANIZADO.BI_UBICACION', 'U') IS NOT NULL DROP TABLE GRANIZADO.BI_UBICACION;
GO


-- Crear esquema si no existe
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'GRANIZADO')
BEGIN
    EXEC('CREATE SCHEMA GRANIZADO');
END;
GO

-- TABLAS DIMENSIONALES
CREATE TABLE GRANIZADO.BI_UBICACION (
    id_ubicacion INT IDENTITY(1,1) NOT NULL,
    provincia NVARCHAR(50),
    localidad NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_ESTADO_PEDIDO (
    id_estado_pedido INT IDENTITY(1,1) NOT NULL,
    descripcion_estado NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_MODELO (
    id_modelo INT IDENTITY(1,1) NOT NULL,
    nombre_modelo NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_TURNO (
    id_turno INT IDENTITY(1,1) NOT NULL,
    descripcion_turno NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_RANGO_ETARIO (
    id_rango_etario INT IDENTITY(1,1) NOT NULL,
    rango NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_TIPO_MATERIAL (
    id_tipo_material INT IDENTITY(1,1) NOT NULL,
    tipo NVARCHAR(50)
);

CREATE TABLE GRANIZADO.BI_TIEMPO (
    id_tiempo INT IDENTITY(1,1) NOT NULL,
    anio INT,
    mes INT,
    cuatrimestre INT
);

CREATE TABLE GRANIZADO.BI_SUCURSAL (
    id_sucursal INT IDENTITY(1,1) NOT NULL,
    nro_sucursal BIGINT

);

-- TABLAS DE HECHOS
CREATE TABLE GRANIZADO.BI_HECHOS_COMPRAS (
    id_compra INT IDENTITY(1,1) NOT NULL,
    id_tiempo INT NOT NULL,
    id_ubicacion_sucursal INT NOT NULL,
    id_tipo_material INT NOT NULL,
    id_sucursal INT,
    monto_total DECIMAL(12,4)
);

CREATE TABLE GRANIZADO.BI_HECHOS_PEDIDOS (
    id_pedido INT IDENTITY(1,1) NOT NULL,
    id_tiempo INT NOT NULL,
    id_rango_etario INT NOT NULL,
    id_turno INT NOT NULL,
    id_estado_pedido INT NOT NULL,
    id_modelo INT NOT NULL,
    id_sucursal INT NOT NULL,
    cantidad INT
);

CREATE TABLE GRANIZADO.BI_HECHOS_FACTURACION (
    id_factura INT IDENTITY(1,1) NOT NULL,
    id_tiempo INT NOT NULL,
    id_rango_etario INT NOT NULL,
    id_ubicacion_sucursal INT NOT NULL,
    id_turno INT NOT NULL,
    id_sucursal INT NOT NULL,
    monto_total DECIMAL(12,4)
);

CREATE TABLE GRANIZADO.BI_HECHOS_ENVIOS (
    id_envio INT IDENTITY(1,1) NOT NULL,
    id_tiempo INT NOT NULL,
    id_rango_etario INT NOT NULL,
    id_ubicacion_cliente INT NOT NULL,
    cumplido BIT,
    costo_total_envio DECIMAL(12,4)
);

-- CLAVES PRIMARIAS
ALTER TABLE GRANIZADO.BI_UBICACION ADD CONSTRAINT PK_BI_UBICACION PRIMARY KEY (id_ubicacion);
ALTER TABLE GRANIZADO.BI_ESTADO_PEDIDO ADD CONSTRAINT PK_BI_ESTADO_PEDIDO PRIMARY KEY (id_estado_pedido);
ALTER TABLE GRANIZADO.BI_MODELO ADD CONSTRAINT PK_BI_MODELO PRIMARY KEY (id_modelo);
ALTER TABLE GRANIZADO.BI_TURNO ADD CONSTRAINT PK_BI_TURNO PRIMARY KEY (id_turno);
ALTER TABLE GRANIZADO.BI_RANGO_ETARIO ADD CONSTRAINT PK_BI_RANGO_ETARIO PRIMARY KEY (id_rango_etario);
ALTER TABLE GRANIZADO.BI_TIPO_MATERIAL ADD CONSTRAINT PK_BI_TIPO_MATERIAL PRIMARY KEY (id_tipo_material);
ALTER TABLE GRANIZADO.BI_TIEMPO ADD CONSTRAINT PK_BI_TIEMPO PRIMARY KEY (id_tiempo);
ALTER TABLE GRANIZADO.BI_SUCURSAL ADD CONSTRAINT PK_BI_SUCURSAL PRIMARY KEY (id_sucursal);
ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS ADD CONSTRAINT PK_BI_HECHOS_COMPRAS PRIMARY KEY (id_compra);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT PK_BI_HECHOS_PEDIDOS PRIMARY KEY (id_pedido);
ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT PK_BI_HECHOS_FACTURACION PRIMARY KEY (id_factura);
ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS ADD CONSTRAINT PK_BI_HECHOS_ENVIOS PRIMARY KEY (id_envio);

-- CLAVES FOR√ÅNEAS
ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS ADD CONSTRAINT FK_BI_HECHOS_COMPRAS_id_tiempo FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo);
ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS ADD CONSTRAINT FK_BI_HECHOS_COMPRAS_id_ubicacion FOREIGN KEY (id_ubicacion_sucursal) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion);
ALTER TABLE GRANIZADO.BI_HECHOS_COMPRAS ADD CONSTRAINT FK_BI_HECHOS_COMPRAS_id_tipo_material FOREIGN KEY (id_tipo_material) REFERENCES GRANIZADO.BI_TIPO_MATERIAL(id_tipo_material);

ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_tiempo FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_rango_etario FOREIGN KEY (id_rango_etario) REFERENCES GRANIZADO.BI_RANGO_ETARIO(id_rango_etario);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_turno FOREIGN KEY (id_turno) REFERENCES GRANIZADO.BI_TURNO(id_turno);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_estado_pedido FOREIGN KEY (id_estado_pedido) REFERENCES GRANIZADO.BI_ESTADO_PEDIDO(id_estado_pedido);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_modelo FOREIGN KEY (id_modelo) REFERENCES GRANIZADO.BI_MODELO(id_modelo);
ALTER TABLE GRANIZADO.BI_HECHOS_PEDIDOS ADD CONSTRAINT FK_BI_HECHOS_PEDIDOS_id_sucursal FOREIGN KEY (id_sucursal) REFERENCES GRANIZADO.BI_SUCURSAL(id_sucursal);

ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT FK_BI_HECHOS_FACTURACION_id_tiempo FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo);
ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT FK_BI_HECHOS_FACTURACION_id_rango_etario FOREIGN KEY (id_rango_etario) REFERENCES GRANIZADO.BI_RANGO_ETARIO(id_rango_etario);
ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT FK_BI_HECHOS_FACTURACION_id_ubicacion_sucursal FOREIGN KEY (id_ubicacion_sucursal) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion);
ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT FK_BI_HECHOS_FACTURACION_id_turno FOREIGN KEY (id_turno) REFERENCES GRANIZADO.BI_TURNO(id_turno);
ALTER TABLE GRANIZADO.BI_HECHOS_FACTURACION ADD CONSTRAINT FK_BI_HECHOS_FACTURACION_id_sucursal FOREIGN KEY (id_sucursal) REFERENCES GRANIZADO.BI_SUCURSAL(id_sucursal);

ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS ADD CONSTRAINT FK_BI_HECHOS_ENVIOS_id_tiempo FOREIGN KEY (id_tiempo) REFERENCES GRANIZADO.BI_TIEMPO(id_tiempo);
ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS ADD CONSTRAINT FK_BI_HECHOS_ENVIOS_id_rango_etario FOREIGN KEY (id_rango_etario) REFERENCES GRANIZADO.BI_RANGO_ETARIO(id_rango_etario);
ALTER TABLE GRANIZADO.BI_HECHOS_ENVIOS ADD CONSTRAINT FK_BI_HECHOS_ENVIOS_id_ubicacion_cliente FOREIGN KEY (id_ubicacion_cliente) REFERENCES GRANIZADO.BI_UBICACION(id_ubicacion);



CREATE PROCEDURE GRANIZADO.MIGRAR_BI_TIEMPO
AS
BEGIN
--tienen fecha: factura,envio,pedido,compra
INSERT INTO GRANIZADO.BI_TIEMPO(ANIO, MES, CUATRIMESTRE)
    SELECT DISTINCT
        YEAR(FACTURA.Factura_Fecha),
        MONTH(FACTURA.Factura_Fecha),
        CASE
            WHEN MONTH(FACTURA.Factura_Fecha) <= 4 THEN '1'
            WHEN MONTH(FACTURA.Factura_Fecha) <= 8 THEN '2'
            WHEN MONTH(FACTURA.Factura_Fecha) <= 12 THEN '3'
        END 
        FROM GRANIZADO.FACTURA
END
GO

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_UBICACION
AS
BEGIN
	INSERT INTO GRANIZADO.BI_UBICACION (localidad,provincia)
	SELECT l.localidad_nombre,p.prov_nombre from GRANIZADO.LOCALIDAD l join GRANIZADO.PROVINCIA p
	on l.provincia_id = p.provincia_id
	--revisar porque la pk empieza muy arriba (igual anda)
END
GO

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_RANGO_ETARIO
AS
BEGIN

	INSERT INTO GRANIZADO.BI_RANGO_ETARIO
	VALUES (0,25),
		   (25, 35),
		   (35,50),
		   (50, 150)
END
GO

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_TURNO
AS
BEGIN
	INSERT INTO GRANIZADO.BI_TURNO
	VALUES ('8:00:00', '14:00:00'),
			('14:00:00', '20:00:00')

END
GO

CREATE PROCEDURE GRANIZADO.MIGRAR_TIPO_MATERIAL
AS
BEGIN
	INSERT INTO GRANIZADO.BI_TIPO_MATERIAL
	select tipo_nombre from GRANIZADO.TIPO_MATERIAL
END
GO

CREATE PROCEDURE GRANIZADO.MIGRAR_BI_ESTADO_PEDIDO
AS
BEGIN
    INSERT INTO GRANIZADO.BI_ESTADO_PEDIDO (id_estado_pedido, descripcion_estado)
    SELECT 
        ROW_NUMBER() OVER (ORDER BY descripcion_estado) AS id_estado_pedido,
        descripcion_estado
    FROM (
        SELECT DISTINCT Pedido_Estado AS descripcion_estado
        FROM GRANIZADO.PEDIDO
        WHERE Pedido_Estado IS NOT NULL
    ) AS estados
END
GO


CREATE PROCEDURE GRANIZADO.MIGRAR_BI_MODELO
AS
BEGIN
    INSERT INTO GRANIZADO.BI_MODELO (id_modelo, nombre_modelo)
    SELECT mod_id, nombre_modelo FROM GRANIZADO.MODELO
END
GO